Terminals unused in grammar

   ERROR


Grammar

    0 $accept: Input $end

    1 Input: Global_Statement Input
    2      | error END
    3      | END

    4 Global_Statement: Var_Decl
    5                 | Func_Decl SEMI
    6                 | Func_Defn

    7 Var_Decl: INT Var_List SEMI
    8         | FLOAT Var_List SEMI
    9         | CONST INT Var_List SEMI
   10         | CONST FLOAT Var_List SEMI
   11         | STATIC INT Var_List SEMI
   12         | STATIC FLOAT Var_List SEMI
   13         | EXTERN INT Var_List SEMI
   14         | EXTERN FLOAT Var_List SEMI

   15 Var_List: Var COMMA Var_List
   16         | Var_Asgn COMMA Var_List
   17         | Var
   18         | Var_Asgn

   19 Var: ID
   20    | ID OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   21    | ID Brac_Dim_List

   22 Var_Asgn: Var ASGN Expression

   23 Dim_List: Expression COMMA Dim_List
   24         | Expression

   25 Brac_Dim_List: OPEN_BRAC Expression CLOSE_BRAC Brac_Dim_List
   26              | OPEN_BRAC Expression CLOSE_BRAC

   27 Func_Decl: INT ID OPEN_PAR Decl_Param_List CLOSE_PAR
   28          | FLOAT ID OPEN_PAR Decl_Param_List CLOSE_PAR
   29          | VOID ID OPEN_PAR Decl_Param_List CLOSE_PAR
   30          | INT ID OPEN_PAR CLOSE_PAR
   31          | FLOAT ID OPEN_PAR CLOSE_PAR
   32          | VOID ID OPEN_PAR CLOSE_PAR

   33 Decl_Param_List: Decl_Param COMMA Decl_Param_List
   34                | Defn_Param COMMA Decl_Param_List
   35                | Decl_Param
   36                | Defn_Param

   37 Func_Call: ID OPEN_PAR Param_List CLOSE_PAR

   38 Param_List: Expression COMMA Param_List
   39           | Expression

   40 Func_Defn: Func_Decl Block

   41 Decl_Param: INT
   42           | FLOAT

   43 Defn_Param: INT ID
   44           | FLOAT ID

   45 Statements: Statement Statements
   46           | Statement

   47 Statement: Non_Conditional_Statement
   48          | Conditional_Block

   49 Non_Conditional_Statement: Block
   50                          | Loop_Block
   51                          | Var_Decl
   52                          | Expression SEMI
   53                          | BREAK SEMI
   54                          | CONTINUE SEMI
   55                          | RETURN Expression SEMI
   56                          | SEMI

   57 Block: OPEN_CURLY Statements CLOSE_CURLY

   58 Loop_Block: FOR OPEN_PAR For_Control CLOSE_PAR Statement
   59           | WHILE OPEN_PAR Condition CLOSE_PAR Statement

   60 For_Control: Init_Statement Condition SEMI Expression
   61            | Init_Statement SEMI Expression

   62 Init_Statement: Expression SEMI
   63               | SEMI

   64 Conditional_Block: If_Else_Block
   65                  | Switch_Block

   66 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR Statement
   67              | IF OPEN_PAR Condition CLOSE_PAR Statement ELSE Statement

   68 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY
   69             | SWITCH OPEN_PAR Var CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY

   70 Switch_Body: CASE Constant_Expression COLON Statements
   71            | DEFAULT COLON Statements

   72 Condition: OPEN_PAR Condition CLOSE_PAR
   73          | NOT Condition
   74          | Condition OR Condition
   75          | Condition AND Condition
   76          | Expression LT Expression
   77          | Expression GT Expression
   78          | Expression LTE Expression
   79          | Expression GTE Expression
   80          | Expression EQ Expression
   81          | Expression NEQ Expression

   82 Constant_Expression: REAL
   83                    | OPEN_PAR Constant_Expression CLOSE_PAR
   84                    | Constant_Expression PLUS Constant_Expression
   85                    | Constant_Expression MINUS Constant_Expression
   86                    | Constant_Expression TIMES Constant_Expression
   87                    | Constant_Expression DIVIDE Constant_Expression
   88                    | Constant_Expression MODULO Constant_Expression
   89                    | MINUS Constant_Expression

   90 Expression: REAL
   91           | Var
   92           | Var_Asgn
   93           | Func_Call
   94           | Var INCREMENT
   95           | Var DECREMENT
   96           | INCREMENT Var
   97           | DECREMENT Var
   98           | OPEN_PAR Expression CLOSE_PAR
   99           | Expression PLUS Expression
  100           | Expression MINUS Expression
  101           | Expression TIMES Expression
  102           | Expression DIVIDE Expression
  103           | Expression MODULO Expression
  104           | MINUS Expression


Terminals, with rules where they appear

$end (0) 0
error (256) 2
GTE (258) 79
LTE (259) 78
LT (260) 76
GT (261) 77
NEQ (262) 81
EQ (263) 80
ASGN (264) 22
AND (265) 75
OR (266) 74
NOT (267) 73
PLUS (268) 84 99
MINUS (269) 85 89 100 104
TIMES (270) 86 101
DIVIDE (271) 87 102
MODULO (272) 88 103
INCREMENT (273) 94 96
DECREMENT (274) 95 97
IF (275) 66 67
ELSE (276) 67
SWITCH (277) 68 69
CASE (278) 70
DEFAULT (279) 71
BREAK (280) 53
CONTINUE (281) 54
THEN (282)
WHILE (283) 59
FOR (284) 58
OPEN_PAR (285) 27 28 29 30 31 32 37 58 59 66 67 68 69 72 83 98
OPEN_CURLY (286) 57 68 69
CLOSE_PAR (287) 27 28 29 30 31 32 37 58 59 66 67 68 69 72 83 98
CLOSE_CURLY (288) 57 68 69
COMMA (289) 15 16 20 23 33 34 38
SEMI (290) 5 7 8 9 10 11 12 13 14 52 53 54 55 56 60 61 62 63
OPEN_BRAC (291) 20 25 26
CLOSE_BRAC (292) 20 25 26
COLON (293) 70 71
INT (294) 7 9 11 13 27 30 41 43
FLOAT (295) 8 10 12 14 28 31 42 44
VOID (296) 29 32
RETURN (297) 55
CONST (298) 9 10
EXTERN (299) 13 14
STATIC (300) 11 12
REAL <node> (301) 82 90
ID <node> (302) 19 20 21 27 28 29 30 31 32 37 43 44
ERROR (303)
END (304) 2 3
NEG (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Input (52)
    on left: 1 2 3, on right: 0 1
Global_Statement (53)
    on left: 4 5 6, on right: 1
Var_Decl <node> (54)
    on left: 7 8 9 10 11 12 13 14, on right: 4 51
Var_List <node> (55)
    on left: 15 16 17 18, on right: 7 8 9 10 11 12 13 14 15 16
Var <node> (56)
    on left: 19 20 21, on right: 15 17 22 69 91 94 95 96 97
Var_Asgn <node> (57)
    on left: 22, on right: 16 18 92
Dim_List <node> (58)
    on left: 23 24, on right: 20 23
Brac_Dim_List <node> (59)
    on left: 25 26, on right: 21 25
Func_Decl <node> (60)
    on left: 27 28 29 30 31 32, on right: 5 40
Decl_Param_List <node> (61)
    on left: 33 34 35 36, on right: 27 28 29 33 34
Func_Call <node> (62)
    on left: 37, on right: 93
Param_List <node> (63)
    on left: 38 39, on right: 37 38
Func_Defn <node> (64)
    on left: 40, on right: 6
Decl_Param <node> (65)
    on left: 41 42, on right: 33 35
Defn_Param <node> (66)
    on left: 43 44, on right: 34 36
Statements <node> (67)
    on left: 45 46, on right: 45 57 70 71
Statement <node> (68)
    on left: 47 48, on right: 45 46 58 59 66 67
Non_Conditional_Statement <node> (69)
    on left: 49 50 51 52 53 54 55 56, on right: 47
Block <node> (70)
    on left: 57, on right: 40 49
Loop_Block <node> (71)
    on left: 58 59, on right: 50
For_Control <node> (72)
    on left: 60 61, on right: 58
Init_Statement <node> (73)
    on left: 62 63, on right: 60 61
Conditional_Block <node> (74)
    on left: 64 65, on right: 48
If_Else_Block <node> (75)
    on left: 66 67, on right: 64
Switch_Block <node> (76)
    on left: 68 69, on right: 65
Switch_Body <node> (77)
    on left: 70 71, on right: 68 69
Condition <node> (78)
    on left: 72 73 74 75 76 77 78 79 80 81, on right: 59 60 66 67 72
    73 74 75
Constant_Expression <node> (79)
    on left: 82 83 84 85 86 87 88 89, on right: 68 70 83 84 85 86 87
    88 89
Expression <node> (80)
    on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104, on right:
    20 22 23 24 25 26 38 39 52 55 60 61 62 76 77 78 79 80 81 98 99
    100 101 102 103 104


State 0

    0 $accept: . Input $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    CONST   shift, and go to state 5
    EXTERN  shift, and go to state 6
    STATIC  shift, and go to state 7
    END     shift, and go to state 8

    Input             go to state 9
    Global_Statement  go to state 10
    Var_Decl          go to state 11
    Func_Decl         go to state 12
    Func_Defn         go to state 13


State 1

    2 Input: error . END

    END  shift, and go to state 14


State 2

    7 Var_Decl: INT . Var_List SEMI
   27 Func_Decl: INT . ID OPEN_PAR Decl_Param_List CLOSE_PAR
   30          | INT . ID OPEN_PAR CLOSE_PAR

    ID  shift, and go to state 15

    Var_List  go to state 16
    Var       go to state 17
    Var_Asgn  go to state 18


State 3

    8 Var_Decl: FLOAT . Var_List SEMI
   28 Func_Decl: FLOAT . ID OPEN_PAR Decl_Param_List CLOSE_PAR
   31          | FLOAT . ID OPEN_PAR CLOSE_PAR

    ID  shift, and go to state 19

    Var_List  go to state 20
    Var       go to state 17
    Var_Asgn  go to state 18


State 4

   29 Func_Decl: VOID . ID OPEN_PAR Decl_Param_List CLOSE_PAR
   32          | VOID . ID OPEN_PAR CLOSE_PAR

    ID  shift, and go to state 21


State 5

    9 Var_Decl: CONST . INT Var_List SEMI
   10         | CONST . FLOAT Var_List SEMI

    INT    shift, and go to state 22
    FLOAT  shift, and go to state 23


State 6

   13 Var_Decl: EXTERN . INT Var_List SEMI
   14         | EXTERN . FLOAT Var_List SEMI

    INT    shift, and go to state 24
    FLOAT  shift, and go to state 25


State 7

   11 Var_Decl: STATIC . INT Var_List SEMI
   12         | STATIC . FLOAT Var_List SEMI

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27


State 8

    3 Input: END .

    $default  reduce using rule 3 (Input)


State 9

    0 $accept: Input . $end

    $end  shift, and go to state 28


State 10

    1 Input: Global_Statement . Input

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    CONST   shift, and go to state 5
    EXTERN  shift, and go to state 6
    STATIC  shift, and go to state 7
    END     shift, and go to state 8

    Input             go to state 29
    Global_Statement  go to state 10
    Var_Decl          go to state 11
    Func_Decl         go to state 12
    Func_Defn         go to state 13


State 11

    4 Global_Statement: Var_Decl .

    $default  reduce using rule 4 (Global_Statement)


State 12

    5 Global_Statement: Func_Decl . SEMI
   40 Func_Defn: Func_Decl . Block

    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 31

    Block  go to state 32


State 13

    6 Global_Statement: Func_Defn .

    $default  reduce using rule 6 (Global_Statement)


State 14

    2 Input: error END .

    $default  reduce using rule 2 (Input)


State 15

   19 Var: ID .
   20    | ID . OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   21    | ID . Brac_Dim_List
   27 Func_Decl: INT ID . OPEN_PAR Decl_Param_List CLOSE_PAR
   30          | INT ID . OPEN_PAR CLOSE_PAR

    OPEN_PAR   shift, and go to state 33
    OPEN_BRAC  shift, and go to state 34

    $default  reduce using rule 19 (Var)

    Brac_Dim_List  go to state 35


State 16

    7 Var_Decl: INT Var_List . SEMI

    SEMI  shift, and go to state 36


State 17

   15 Var_List: Var . COMMA Var_List
   17         | Var .
   22 Var_Asgn: Var . ASGN Expression

    ASGN   shift, and go to state 37
    COMMA  shift, and go to state 38

    $default  reduce using rule 17 (Var_List)


State 18

   16 Var_List: Var_Asgn . COMMA Var_List
   18         | Var_Asgn .

    COMMA  shift, and go to state 39

    $default  reduce using rule 18 (Var_List)


State 19

   19 Var: ID .
   20    | ID . OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   21    | ID . Brac_Dim_List
   28 Func_Decl: FLOAT ID . OPEN_PAR Decl_Param_List CLOSE_PAR
   31          | FLOAT ID . OPEN_PAR CLOSE_PAR

    OPEN_PAR   shift, and go to state 40
    OPEN_BRAC  shift, and go to state 34

    $default  reduce using rule 19 (Var)

    Brac_Dim_List  go to state 35


State 20

    8 Var_Decl: FLOAT Var_List . SEMI

    SEMI  shift, and go to state 41


State 21

   29 Func_Decl: VOID ID . OPEN_PAR Decl_Param_List CLOSE_PAR
   32          | VOID ID . OPEN_PAR CLOSE_PAR

    OPEN_PAR  shift, and go to state 42


State 22

    9 Var_Decl: CONST INT . Var_List SEMI

    ID  shift, and go to state 43

    Var_List  go to state 44
    Var       go to state 17
    Var_Asgn  go to state 18


State 23

   10 Var_Decl: CONST FLOAT . Var_List SEMI

    ID  shift, and go to state 43

    Var_List  go to state 45
    Var       go to state 17
    Var_Asgn  go to state 18


State 24

   13 Var_Decl: EXTERN INT . Var_List SEMI

    ID  shift, and go to state 43

    Var_List  go to state 46
    Var       go to state 17
    Var_Asgn  go to state 18


State 25

   14 Var_Decl: EXTERN FLOAT . Var_List SEMI

    ID  shift, and go to state 43

    Var_List  go to state 47
    Var       go to state 17
    Var_Asgn  go to state 18


State 26

   11 Var_Decl: STATIC INT . Var_List SEMI

    ID  shift, and go to state 43

    Var_List  go to state 48
    Var       go to state 17
    Var_Asgn  go to state 18


State 27

   12 Var_Decl: STATIC FLOAT . Var_List SEMI

    ID  shift, and go to state 43

    Var_List  go to state 49
    Var       go to state 17
    Var_Asgn  go to state 18


State 28

    0 $accept: Input $end .

    $default  accept


State 29

    1 Input: Global_Statement Input .

    $default  reduce using rule 1 (Input)


State 30

   57 Block: OPEN_CURLY . Statements CLOSE_CURLY

    MINUS       shift, and go to state 50
    INCREMENT   shift, and go to state 51
    DECREMENT   shift, and go to state 52
    IF          shift, and go to state 53
    SWITCH      shift, and go to state 54
    BREAK       shift, and go to state 55
    CONTINUE    shift, and go to state 56
    WHILE       shift, and go to state 57
    FOR         shift, and go to state 58
    OPEN_PAR    shift, and go to state 59
    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 60
    INT         shift, and go to state 61
    FLOAT       shift, and go to state 62
    RETURN      shift, and go to state 63
    CONST       shift, and go to state 5
    EXTERN      shift, and go to state 6
    STATIC      shift, and go to state 7
    REAL        shift, and go to state 64
    ID          shift, and go to state 65

    Var_Decl                   go to state 66
    Var                        go to state 67
    Var_Asgn                   go to state 68
    Func_Call                  go to state 69
    Statements                 go to state 70
    Statement                  go to state 71
    Non_Conditional_Statement  go to state 72
    Block                      go to state 73
    Loop_Block                 go to state 74
    Conditional_Block          go to state 75
    If_Else_Block              go to state 76
    Switch_Block               go to state 77
    Expression                 go to state 78


State 31

    5 Global_Statement: Func_Decl SEMI .

    $default  reduce using rule 5 (Global_Statement)


State 32

   40 Func_Defn: Func_Decl Block .

    $default  reduce using rule 40 (Func_Defn)


State 33

   27 Func_Decl: INT ID OPEN_PAR . Decl_Param_List CLOSE_PAR
   30          | INT ID OPEN_PAR . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 79
    INT        shift, and go to state 80
    FLOAT      shift, and go to state 81

    Decl_Param_List  go to state 82
    Decl_Param       go to state 83
    Defn_Param       go to state 84


State 34

   20 Var: ID OPEN_BRAC . Expression COMMA Dim_List CLOSE_BRAC
   25 Brac_Dim_List: OPEN_BRAC . Expression CLOSE_BRAC Brac_Dim_List
   26              | OPEN_BRAC . Expression CLOSE_BRAC

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 85


State 35

   21 Var: ID Brac_Dim_List .

    $default  reduce using rule 21 (Var)


State 36

    7 Var_Decl: INT Var_List SEMI .

    $default  reduce using rule 7 (Var_Decl)


State 37

   22 Var_Asgn: Var ASGN . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 86


State 38

   15 Var_List: Var COMMA . Var_List

    ID  shift, and go to state 43

    Var_List  go to state 87
    Var       go to state 17
    Var_Asgn  go to state 18


State 39

   16 Var_List: Var_Asgn COMMA . Var_List

    ID  shift, and go to state 43

    Var_List  go to state 88
    Var       go to state 17
    Var_Asgn  go to state 18


State 40

   28 Func_Decl: FLOAT ID OPEN_PAR . Decl_Param_List CLOSE_PAR
   31          | FLOAT ID OPEN_PAR . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 89
    INT        shift, and go to state 80
    FLOAT      shift, and go to state 81

    Decl_Param_List  go to state 90
    Decl_Param       go to state 83
    Defn_Param       go to state 84


State 41

    8 Var_Decl: FLOAT Var_List SEMI .

    $default  reduce using rule 8 (Var_Decl)


State 42

   29 Func_Decl: VOID ID OPEN_PAR . Decl_Param_List CLOSE_PAR
   32          | VOID ID OPEN_PAR . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 91
    INT        shift, and go to state 80
    FLOAT      shift, and go to state 81

    Decl_Param_List  go to state 92
    Decl_Param       go to state 83
    Defn_Param       go to state 84


State 43

   19 Var: ID .
   20    | ID . OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   21    | ID . Brac_Dim_List

    OPEN_BRAC  shift, and go to state 34

    $default  reduce using rule 19 (Var)

    Brac_Dim_List  go to state 35


State 44

    9 Var_Decl: CONST INT Var_List . SEMI

    SEMI  shift, and go to state 93


State 45

   10 Var_Decl: CONST FLOAT Var_List . SEMI

    SEMI  shift, and go to state 94


State 46

   13 Var_Decl: EXTERN INT Var_List . SEMI

    SEMI  shift, and go to state 95


State 47

   14 Var_Decl: EXTERN FLOAT Var_List . SEMI

    SEMI  shift, and go to state 96


State 48

   11 Var_Decl: STATIC INT Var_List . SEMI

    SEMI  shift, and go to state 97


State 49

   12 Var_Decl: STATIC FLOAT Var_List . SEMI

    SEMI  shift, and go to state 98


State 50

  104 Expression: MINUS . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 99


State 51

   96 Expression: INCREMENT . Var

    ID  shift, and go to state 43

    Var  go to state 100


State 52

   97 Expression: DECREMENT . Var

    ID  shift, and go to state 43

    Var  go to state 101


State 53

   66 If_Else_Block: IF . OPEN_PAR Condition CLOSE_PAR Statement
   67              | IF . OPEN_PAR Condition CLOSE_PAR Statement ELSE Statement

    OPEN_PAR  shift, and go to state 102


State 54

   68 Switch_Block: SWITCH . OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY
   69             | SWITCH . OPEN_PAR Var CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY

    OPEN_PAR  shift, and go to state 103


State 55

   53 Non_Conditional_Statement: BREAK . SEMI

    SEMI  shift, and go to state 104


State 56

   54 Non_Conditional_Statement: CONTINUE . SEMI

    SEMI  shift, and go to state 105


State 57

   59 Loop_Block: WHILE . OPEN_PAR Condition CLOSE_PAR Statement

    OPEN_PAR  shift, and go to state 106


State 58

   58 Loop_Block: FOR . OPEN_PAR For_Control CLOSE_PAR Statement

    OPEN_PAR  shift, and go to state 107


State 59

   98 Expression: OPEN_PAR . Expression CLOSE_PAR

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 108


State 60

   56 Non_Conditional_Statement: SEMI .

    $default  reduce using rule 56 (Non_Conditional_Statement)


State 61

    7 Var_Decl: INT . Var_List SEMI

    ID  shift, and go to state 43

    Var_List  go to state 16
    Var       go to state 17
    Var_Asgn  go to state 18


State 62

    8 Var_Decl: FLOAT . Var_List SEMI

    ID  shift, and go to state 43

    Var_List  go to state 20
    Var       go to state 17
    Var_Asgn  go to state 18


State 63

   55 Non_Conditional_Statement: RETURN . Expression SEMI

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 109


State 64

   90 Expression: REAL .

    $default  reduce using rule 90 (Expression)


State 65

   19 Var: ID .
   20    | ID . OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   21    | ID . Brac_Dim_List
   37 Func_Call: ID . OPEN_PAR Param_List CLOSE_PAR

    OPEN_PAR   shift, and go to state 110
    OPEN_BRAC  shift, and go to state 34

    $default  reduce using rule 19 (Var)

    Brac_Dim_List  go to state 35


State 66

   51 Non_Conditional_Statement: Var_Decl .

    $default  reduce using rule 51 (Non_Conditional_Statement)


State 67

   22 Var_Asgn: Var . ASGN Expression
   91 Expression: Var .
   94           | Var . INCREMENT
   95           | Var . DECREMENT

    ASGN       shift, and go to state 37
    INCREMENT  shift, and go to state 111
    DECREMENT  shift, and go to state 112

    $default  reduce using rule 91 (Expression)


State 68

   92 Expression: Var_Asgn .

    $default  reduce using rule 92 (Expression)


State 69

   93 Expression: Func_Call .

    $default  reduce using rule 93 (Expression)


State 70

   57 Block: OPEN_CURLY Statements . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 113


State 71

   45 Statements: Statement . Statements
   46           | Statement .

    MINUS       shift, and go to state 50
    INCREMENT   shift, and go to state 51
    DECREMENT   shift, and go to state 52
    IF          shift, and go to state 53
    SWITCH      shift, and go to state 54
    BREAK       shift, and go to state 55
    CONTINUE    shift, and go to state 56
    WHILE       shift, and go to state 57
    FOR         shift, and go to state 58
    OPEN_PAR    shift, and go to state 59
    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 60
    INT         shift, and go to state 61
    FLOAT       shift, and go to state 62
    RETURN      shift, and go to state 63
    CONST       shift, and go to state 5
    EXTERN      shift, and go to state 6
    STATIC      shift, and go to state 7
    REAL        shift, and go to state 64
    ID          shift, and go to state 65

    $default  reduce using rule 46 (Statements)

    Var_Decl                   go to state 66
    Var                        go to state 67
    Var_Asgn                   go to state 68
    Func_Call                  go to state 69
    Statements                 go to state 114
    Statement                  go to state 71
    Non_Conditional_Statement  go to state 72
    Block                      go to state 73
    Loop_Block                 go to state 74
    Conditional_Block          go to state 75
    If_Else_Block              go to state 76
    Switch_Block               go to state 77
    Expression                 go to state 78


State 72

   47 Statement: Non_Conditional_Statement .

    $default  reduce using rule 47 (Statement)


State 73

   49 Non_Conditional_Statement: Block .

    $default  reduce using rule 49 (Non_Conditional_Statement)


State 74

   50 Non_Conditional_Statement: Loop_Block .

    $default  reduce using rule 50 (Non_Conditional_Statement)


State 75

   48 Statement: Conditional_Block .

    $default  reduce using rule 48 (Statement)


State 76

   64 Conditional_Block: If_Else_Block .

    $default  reduce using rule 64 (Conditional_Block)


State 77

   65 Conditional_Block: Switch_Block .

    $default  reduce using rule 65 (Conditional_Block)


State 78

   52 Non_Conditional_Statement: Expression . SEMI
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119
    SEMI    shift, and go to state 120


State 79

   30 Func_Decl: INT ID OPEN_PAR CLOSE_PAR .

    $default  reduce using rule 30 (Func_Decl)


State 80

   41 Decl_Param: INT .
   43 Defn_Param: INT . ID

    ID  shift, and go to state 121

    $default  reduce using rule 41 (Decl_Param)


State 81

   42 Decl_Param: FLOAT .
   44 Defn_Param: FLOAT . ID

    ID  shift, and go to state 122

    $default  reduce using rule 42 (Decl_Param)


State 82

   27 Func_Decl: INT ID OPEN_PAR Decl_Param_List . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 123


State 83

   33 Decl_Param_List: Decl_Param . COMMA Decl_Param_List
   35                | Decl_Param .

    COMMA  shift, and go to state 124

    $default  reduce using rule 35 (Decl_Param_List)


State 84

   34 Decl_Param_List: Defn_Param . COMMA Decl_Param_List
   36                | Defn_Param .

    COMMA  shift, and go to state 125

    $default  reduce using rule 36 (Decl_Param_List)


State 85

   20 Var: ID OPEN_BRAC Expression . COMMA Dim_List CLOSE_BRAC
   25 Brac_Dim_List: OPEN_BRAC Expression . CLOSE_BRAC Brac_Dim_List
   26              | OPEN_BRAC Expression . CLOSE_BRAC
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS        shift, and go to state 115
    MINUS       shift, and go to state 116
    TIMES       shift, and go to state 117
    DIVIDE      shift, and go to state 118
    MODULO      shift, and go to state 119
    COMMA       shift, and go to state 126
    CLOSE_BRAC  shift, and go to state 127


State 86

   22 Var_Asgn: Var ASGN Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 22 (Var_Asgn)


State 87

   15 Var_List: Var COMMA Var_List .

    $default  reduce using rule 15 (Var_List)


State 88

   16 Var_List: Var_Asgn COMMA Var_List .

    $default  reduce using rule 16 (Var_List)


State 89

   31 Func_Decl: FLOAT ID OPEN_PAR CLOSE_PAR .

    $default  reduce using rule 31 (Func_Decl)


State 90

   28 Func_Decl: FLOAT ID OPEN_PAR Decl_Param_List . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 128


State 91

   32 Func_Decl: VOID ID OPEN_PAR CLOSE_PAR .

    $default  reduce using rule 32 (Func_Decl)


State 92

   29 Func_Decl: VOID ID OPEN_PAR Decl_Param_List . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 129


State 93

    9 Var_Decl: CONST INT Var_List SEMI .

    $default  reduce using rule 9 (Var_Decl)


State 94

   10 Var_Decl: CONST FLOAT Var_List SEMI .

    $default  reduce using rule 10 (Var_Decl)


State 95

   13 Var_Decl: EXTERN INT Var_List SEMI .

    $default  reduce using rule 13 (Var_Decl)


State 96

   14 Var_Decl: EXTERN FLOAT Var_List SEMI .

    $default  reduce using rule 14 (Var_Decl)


State 97

   11 Var_Decl: STATIC INT Var_List SEMI .

    $default  reduce using rule 11 (Var_Decl)


State 98

   12 Var_Decl: STATIC FLOAT Var_List SEMI .

    $default  reduce using rule 12 (Var_Decl)


State 99

   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression
  104           | MINUS Expression .

    $default  reduce using rule 104 (Expression)


State 100

   96 Expression: INCREMENT Var .

    $default  reduce using rule 96 (Expression)


State 101

   97 Expression: DECREMENT Var .

    $default  reduce using rule 97 (Expression)


State 102

   66 If_Else_Block: IF OPEN_PAR . Condition CLOSE_PAR Statement
   67              | IF OPEN_PAR . Condition CLOSE_PAR Statement ELSE Statement

    NOT        shift, and go to state 130
    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 131
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Condition   go to state 132
    Expression  go to state 133


State 103

   68 Switch_Block: SWITCH OPEN_PAR . Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY
   69             | SWITCH OPEN_PAR . Var CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136
    ID        shift, and go to state 43

    Var                  go to state 137
    Constant_Expression  go to state 138


State 104

   53 Non_Conditional_Statement: BREAK SEMI .

    $default  reduce using rule 53 (Non_Conditional_Statement)


State 105

   54 Non_Conditional_Statement: CONTINUE SEMI .

    $default  reduce using rule 54 (Non_Conditional_Statement)


State 106

   59 Loop_Block: WHILE OPEN_PAR . Condition CLOSE_PAR Statement

    NOT        shift, and go to state 130
    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 131
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Condition   go to state 139
    Expression  go to state 133


State 107

   58 Loop_Block: FOR OPEN_PAR . For_Control CLOSE_PAR Statement

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    SEMI       shift, and go to state 140
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var             go to state 67
    Var_Asgn        go to state 68
    Func_Call       go to state 69
    For_Control     go to state 141
    Init_Statement  go to state 142
    Expression      go to state 143


State 108

   98 Expression: OPEN_PAR Expression . CLOSE_PAR
   99           | Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS       shift, and go to state 115
    MINUS      shift, and go to state 116
    TIMES      shift, and go to state 117
    DIVIDE     shift, and go to state 118
    MODULO     shift, and go to state 119
    CLOSE_PAR  shift, and go to state 144


State 109

   55 Non_Conditional_Statement: RETURN Expression . SEMI
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119
    SEMI    shift, and go to state 145


State 110

   37 Func_Call: ID OPEN_PAR . Param_List CLOSE_PAR

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Param_List  go to state 146
    Expression  go to state 147


State 111

   94 Expression: Var INCREMENT .

    $default  reduce using rule 94 (Expression)


State 112

   95 Expression: Var DECREMENT .

    $default  reduce using rule 95 (Expression)


State 113

   57 Block: OPEN_CURLY Statements CLOSE_CURLY .

    $default  reduce using rule 57 (Block)


State 114

   45 Statements: Statement Statements .

    $default  reduce using rule 45 (Statements)


State 115

   99 Expression: Expression PLUS . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 148


State 116

  100 Expression: Expression MINUS . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 149


State 117

  101 Expression: Expression TIMES . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 150


State 118

  102 Expression: Expression DIVIDE . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 151


State 119

  103 Expression: Expression MODULO . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 152


State 120

   52 Non_Conditional_Statement: Expression SEMI .

    $default  reduce using rule 52 (Non_Conditional_Statement)


State 121

   43 Defn_Param: INT ID .

    $default  reduce using rule 43 (Defn_Param)


State 122

   44 Defn_Param: FLOAT ID .

    $default  reduce using rule 44 (Defn_Param)


State 123

   27 Func_Decl: INT ID OPEN_PAR Decl_Param_List CLOSE_PAR .

    $default  reduce using rule 27 (Func_Decl)


State 124

   33 Decl_Param_List: Decl_Param COMMA . Decl_Param_List

    INT    shift, and go to state 80
    FLOAT  shift, and go to state 81

    Decl_Param_List  go to state 153
    Decl_Param       go to state 83
    Defn_Param       go to state 84


State 125

   34 Decl_Param_List: Defn_Param COMMA . Decl_Param_List

    INT    shift, and go to state 80
    FLOAT  shift, and go to state 81

    Decl_Param_List  go to state 154
    Decl_Param       go to state 83
    Defn_Param       go to state 84


State 126

   20 Var: ID OPEN_BRAC Expression COMMA . Dim_List CLOSE_BRAC

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Dim_List    go to state 155
    Func_Call   go to state 69
    Expression  go to state 156


State 127

   25 Brac_Dim_List: OPEN_BRAC Expression CLOSE_BRAC . Brac_Dim_List
   26              | OPEN_BRAC Expression CLOSE_BRAC .

    OPEN_BRAC  shift, and go to state 157

    $default  reduce using rule 26 (Brac_Dim_List)

    Brac_Dim_List  go to state 158


State 128

   28 Func_Decl: FLOAT ID OPEN_PAR Decl_Param_List CLOSE_PAR .

    $default  reduce using rule 28 (Func_Decl)


State 129

   29 Func_Decl: VOID ID OPEN_PAR Decl_Param_List CLOSE_PAR .

    $default  reduce using rule 29 (Func_Decl)


State 130

   73 Condition: NOT . Condition

    NOT        shift, and go to state 130
    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 131
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Condition   go to state 159
    Expression  go to state 133


State 131

   72 Condition: OPEN_PAR . Condition CLOSE_PAR
   98 Expression: OPEN_PAR . Expression CLOSE_PAR

    NOT        shift, and go to state 130
    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 131
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Condition   go to state 160
    Expression  go to state 161


State 132

   66 If_Else_Block: IF OPEN_PAR Condition . CLOSE_PAR Statement
   67              | IF OPEN_PAR Condition . CLOSE_PAR Statement ELSE Statement
   74 Condition: Condition . OR Condition
   75          | Condition . AND Condition

    AND        shift, and go to state 162
    OR         shift, and go to state 163
    CLOSE_PAR  shift, and go to state 164


State 133

   76 Condition: Expression . LT Expression
   77          | Expression . GT Expression
   78          | Expression . LTE Expression
   79          | Expression . GTE Expression
   80          | Expression . EQ Expression
   81          | Expression . NEQ Expression
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    GTE     shift, and go to state 165
    LTE     shift, and go to state 166
    LT      shift, and go to state 167
    GT      shift, and go to state 168
    NEQ     shift, and go to state 169
    EQ      shift, and go to state 170
    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119


State 134

   89 Constant_Expression: MINUS . Constant_Expression

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136

    Constant_Expression  go to state 171


State 135

   83 Constant_Expression: OPEN_PAR . Constant_Expression CLOSE_PAR

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136

    Constant_Expression  go to state 172


State 136

   82 Constant_Expression: REAL .

    $default  reduce using rule 82 (Constant_Expression)


State 137

   69 Switch_Block: SWITCH OPEN_PAR Var . CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY

    CLOSE_PAR  shift, and go to state 173


State 138

   68 Switch_Block: SWITCH OPEN_PAR Constant_Expression . CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY
   84 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   85                    | Constant_Expression . MINUS Constant_Expression
   86                    | Constant_Expression . TIMES Constant_Expression
   87                    | Constant_Expression . DIVIDE Constant_Expression
   88                    | Constant_Expression . MODULO Constant_Expression

    PLUS       shift, and go to state 174
    MINUS      shift, and go to state 175
    TIMES      shift, and go to state 176
    DIVIDE     shift, and go to state 177
    MODULO     shift, and go to state 178
    CLOSE_PAR  shift, and go to state 179


State 139

   59 Loop_Block: WHILE OPEN_PAR Condition . CLOSE_PAR Statement
   74 Condition: Condition . OR Condition
   75          | Condition . AND Condition

    AND        shift, and go to state 162
    OR         shift, and go to state 163
    CLOSE_PAR  shift, and go to state 180


State 140

   63 Init_Statement: SEMI .

    $default  reduce using rule 63 (Init_Statement)


State 141

   58 Loop_Block: FOR OPEN_PAR For_Control . CLOSE_PAR Statement

    CLOSE_PAR  shift, and go to state 181


State 142

   60 For_Control: Init_Statement . Condition SEMI Expression
   61            | Init_Statement . SEMI Expression

    NOT        shift, and go to state 130
    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 131
    SEMI       shift, and go to state 182
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Condition   go to state 183
    Expression  go to state 133


State 143

   62 Init_Statement: Expression . SEMI
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119
    SEMI    shift, and go to state 184


State 144

   98 Expression: OPEN_PAR Expression CLOSE_PAR .

    $default  reduce using rule 98 (Expression)


State 145

   55 Non_Conditional_Statement: RETURN Expression SEMI .

    $default  reduce using rule 55 (Non_Conditional_Statement)


State 146

   37 Func_Call: ID OPEN_PAR Param_List . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 185


State 147

   38 Param_List: Expression . COMMA Param_List
   39           | Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119
    COMMA   shift, and go to state 186

    $default  reduce using rule 39 (Param_List)


State 148

   99 Expression: Expression . PLUS Expression
   99           | Expression PLUS Expression .
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 99 (Expression)


State 149

   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  100           | Expression MINUS Expression .
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 100 (Expression)


State 150

   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  101           | Expression TIMES Expression .
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 101 (Expression)


State 151

   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  102           | Expression DIVIDE Expression .
  103           | Expression . MODULO Expression

    $default  reduce using rule 102 (Expression)


State 152

   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression
  103           | Expression MODULO Expression .

    $default  reduce using rule 103 (Expression)


State 153

   33 Decl_Param_List: Decl_Param COMMA Decl_Param_List .

    $default  reduce using rule 33 (Decl_Param_List)


State 154

   34 Decl_Param_List: Defn_Param COMMA Decl_Param_List .

    $default  reduce using rule 34 (Decl_Param_List)


State 155

   20 Var: ID OPEN_BRAC Expression COMMA Dim_List . CLOSE_BRAC

    CLOSE_BRAC  shift, and go to state 187


State 156

   23 Dim_List: Expression . COMMA Dim_List
   24         | Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119
    COMMA   shift, and go to state 188

    $default  reduce using rule 24 (Dim_List)


State 157

   25 Brac_Dim_List: OPEN_BRAC . Expression CLOSE_BRAC Brac_Dim_List
   26              | OPEN_BRAC . Expression CLOSE_BRAC

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 189


State 158

   25 Brac_Dim_List: OPEN_BRAC Expression CLOSE_BRAC Brac_Dim_List .

    $default  reduce using rule 25 (Brac_Dim_List)


State 159

   73 Condition: NOT Condition .
   74          | Condition . OR Condition
   75          | Condition . AND Condition

    $default  reduce using rule 73 (Condition)


State 160

   72 Condition: OPEN_PAR Condition . CLOSE_PAR
   74          | Condition . OR Condition
   75          | Condition . AND Condition

    AND        shift, and go to state 162
    OR         shift, and go to state 163
    CLOSE_PAR  shift, and go to state 190


State 161

   76 Condition: Expression . LT Expression
   77          | Expression . GT Expression
   78          | Expression . LTE Expression
   79          | Expression . GTE Expression
   80          | Expression . EQ Expression
   81          | Expression . NEQ Expression
   98 Expression: OPEN_PAR Expression . CLOSE_PAR
   99           | Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    GTE        shift, and go to state 165
    LTE        shift, and go to state 166
    LT         shift, and go to state 167
    GT         shift, and go to state 168
    NEQ        shift, and go to state 169
    EQ         shift, and go to state 170
    PLUS       shift, and go to state 115
    MINUS      shift, and go to state 116
    TIMES      shift, and go to state 117
    DIVIDE     shift, and go to state 118
    MODULO     shift, and go to state 119
    CLOSE_PAR  shift, and go to state 144


State 162

   75 Condition: Condition AND . Condition

    NOT        shift, and go to state 130
    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 131
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Condition   go to state 191
    Expression  go to state 133


State 163

   74 Condition: Condition OR . Condition

    NOT        shift, and go to state 130
    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 131
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Condition   go to state 192
    Expression  go to state 133


State 164

   66 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR . Statement
   67              | IF OPEN_PAR Condition CLOSE_PAR . Statement ELSE Statement

    MINUS       shift, and go to state 50
    INCREMENT   shift, and go to state 51
    DECREMENT   shift, and go to state 52
    IF          shift, and go to state 53
    SWITCH      shift, and go to state 54
    BREAK       shift, and go to state 55
    CONTINUE    shift, and go to state 56
    WHILE       shift, and go to state 57
    FOR         shift, and go to state 58
    OPEN_PAR    shift, and go to state 59
    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 60
    INT         shift, and go to state 61
    FLOAT       shift, and go to state 62
    RETURN      shift, and go to state 63
    CONST       shift, and go to state 5
    EXTERN      shift, and go to state 6
    STATIC      shift, and go to state 7
    REAL        shift, and go to state 64
    ID          shift, and go to state 65

    Var_Decl                   go to state 66
    Var                        go to state 67
    Var_Asgn                   go to state 68
    Func_Call                  go to state 69
    Statement                  go to state 193
    Non_Conditional_Statement  go to state 72
    Block                      go to state 73
    Loop_Block                 go to state 74
    Conditional_Block          go to state 75
    If_Else_Block              go to state 76
    Switch_Block               go to state 77
    Expression                 go to state 78


State 165

   79 Condition: Expression GTE . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 194


State 166

   78 Condition: Expression LTE . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 195


State 167

   76 Condition: Expression LT . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 196


State 168

   77 Condition: Expression GT . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 197


State 169

   81 Condition: Expression NEQ . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 198


State 170

   80 Condition: Expression EQ . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 199


State 171

   84 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   85                    | Constant_Expression . MINUS Constant_Expression
   86                    | Constant_Expression . TIMES Constant_Expression
   87                    | Constant_Expression . DIVIDE Constant_Expression
   88                    | Constant_Expression . MODULO Constant_Expression
   89                    | MINUS Constant_Expression .

    $default  reduce using rule 89 (Constant_Expression)


State 172

   83 Constant_Expression: OPEN_PAR Constant_Expression . CLOSE_PAR
   84                    | Constant_Expression . PLUS Constant_Expression
   85                    | Constant_Expression . MINUS Constant_Expression
   86                    | Constant_Expression . TIMES Constant_Expression
   87                    | Constant_Expression . DIVIDE Constant_Expression
   88                    | Constant_Expression . MODULO Constant_Expression

    PLUS       shift, and go to state 174
    MINUS      shift, and go to state 175
    TIMES      shift, and go to state 176
    DIVIDE     shift, and go to state 177
    MODULO     shift, and go to state 178
    CLOSE_PAR  shift, and go to state 200


State 173

   69 Switch_Block: SWITCH OPEN_PAR Var CLOSE_PAR . OPEN_CURLY Switch_Body CLOSE_CURLY

    OPEN_CURLY  shift, and go to state 201


State 174

   84 Constant_Expression: Constant_Expression PLUS . Constant_Expression

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136

    Constant_Expression  go to state 202


State 175

   85 Constant_Expression: Constant_Expression MINUS . Constant_Expression

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136

    Constant_Expression  go to state 203


State 176

   86 Constant_Expression: Constant_Expression TIMES . Constant_Expression

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136

    Constant_Expression  go to state 204


State 177

   87 Constant_Expression: Constant_Expression DIVIDE . Constant_Expression

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136

    Constant_Expression  go to state 205


State 178

   88 Constant_Expression: Constant_Expression MODULO . Constant_Expression

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136

    Constant_Expression  go to state 206


State 179

   68 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR . OPEN_CURLY Switch_Body CLOSE_CURLY

    OPEN_CURLY  shift, and go to state 207


State 180

   59 Loop_Block: WHILE OPEN_PAR Condition CLOSE_PAR . Statement

    MINUS       shift, and go to state 50
    INCREMENT   shift, and go to state 51
    DECREMENT   shift, and go to state 52
    IF          shift, and go to state 53
    SWITCH      shift, and go to state 54
    BREAK       shift, and go to state 55
    CONTINUE    shift, and go to state 56
    WHILE       shift, and go to state 57
    FOR         shift, and go to state 58
    OPEN_PAR    shift, and go to state 59
    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 60
    INT         shift, and go to state 61
    FLOAT       shift, and go to state 62
    RETURN      shift, and go to state 63
    CONST       shift, and go to state 5
    EXTERN      shift, and go to state 6
    STATIC      shift, and go to state 7
    REAL        shift, and go to state 64
    ID          shift, and go to state 65

    Var_Decl                   go to state 66
    Var                        go to state 67
    Var_Asgn                   go to state 68
    Func_Call                  go to state 69
    Statement                  go to state 208
    Non_Conditional_Statement  go to state 72
    Block                      go to state 73
    Loop_Block                 go to state 74
    Conditional_Block          go to state 75
    If_Else_Block              go to state 76
    Switch_Block               go to state 77
    Expression                 go to state 78


State 181

   58 Loop_Block: FOR OPEN_PAR For_Control CLOSE_PAR . Statement

    MINUS       shift, and go to state 50
    INCREMENT   shift, and go to state 51
    DECREMENT   shift, and go to state 52
    IF          shift, and go to state 53
    SWITCH      shift, and go to state 54
    BREAK       shift, and go to state 55
    CONTINUE    shift, and go to state 56
    WHILE       shift, and go to state 57
    FOR         shift, and go to state 58
    OPEN_PAR    shift, and go to state 59
    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 60
    INT         shift, and go to state 61
    FLOAT       shift, and go to state 62
    RETURN      shift, and go to state 63
    CONST       shift, and go to state 5
    EXTERN      shift, and go to state 6
    STATIC      shift, and go to state 7
    REAL        shift, and go to state 64
    ID          shift, and go to state 65

    Var_Decl                   go to state 66
    Var                        go to state 67
    Var_Asgn                   go to state 68
    Func_Call                  go to state 69
    Statement                  go to state 209
    Non_Conditional_Statement  go to state 72
    Block                      go to state 73
    Loop_Block                 go to state 74
    Conditional_Block          go to state 75
    If_Else_Block              go to state 76
    Switch_Block               go to state 77
    Expression                 go to state 78


State 182

   61 For_Control: Init_Statement SEMI . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 210


State 183

   60 For_Control: Init_Statement Condition . SEMI Expression
   74 Condition: Condition . OR Condition
   75          | Condition . AND Condition

    AND   shift, and go to state 162
    OR    shift, and go to state 163
    SEMI  shift, and go to state 211


State 184

   62 Init_Statement: Expression SEMI .

    $default  reduce using rule 62 (Init_Statement)


State 185

   37 Func_Call: ID OPEN_PAR Param_List CLOSE_PAR .

    $default  reduce using rule 37 (Func_Call)


State 186

   38 Param_List: Expression COMMA . Param_List

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Param_List  go to state 212
    Expression  go to state 147


State 187

   20 Var: ID OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC .

    $default  reduce using rule 20 (Var)


State 188

   23 Dim_List: Expression COMMA . Dim_List

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Dim_List    go to state 213
    Func_Call   go to state 69
    Expression  go to state 156


State 189

   25 Brac_Dim_List: OPEN_BRAC Expression . CLOSE_BRAC Brac_Dim_List
   26              | OPEN_BRAC Expression . CLOSE_BRAC
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS        shift, and go to state 115
    MINUS       shift, and go to state 116
    TIMES       shift, and go to state 117
    DIVIDE      shift, and go to state 118
    MODULO      shift, and go to state 119
    CLOSE_BRAC  shift, and go to state 127


State 190

   72 Condition: OPEN_PAR Condition CLOSE_PAR .

    $default  reduce using rule 72 (Condition)


State 191

   74 Condition: Condition . OR Condition
   75          | Condition . AND Condition
   75          | Condition AND Condition .

    AND  shift, and go to state 162
    OR   shift, and go to state 163

    $default  reduce using rule 75 (Condition)


State 192

   74 Condition: Condition . OR Condition
   74          | Condition OR Condition .
   75          | Condition . AND Condition

    AND  shift, and go to state 162
    OR   shift, and go to state 163

    $default  reduce using rule 74 (Condition)


State 193

   66 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR Statement .
   67              | IF OPEN_PAR Condition CLOSE_PAR Statement . ELSE Statement

    ELSE  shift, and go to state 214

    $default  reduce using rule 66 (If_Else_Block)


State 194

   79 Condition: Expression GTE Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 79 (Condition)


State 195

   78 Condition: Expression LTE Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 78 (Condition)


State 196

   76 Condition: Expression LT Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 76 (Condition)


State 197

   77 Condition: Expression GT Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 77 (Condition)


State 198

   81 Condition: Expression NEQ Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 81 (Condition)


State 199

   80 Condition: Expression EQ Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 80 (Condition)


State 200

   83 Constant_Expression: OPEN_PAR Constant_Expression CLOSE_PAR .

    $default  reduce using rule 83 (Constant_Expression)


State 201

   69 Switch_Block: SWITCH OPEN_PAR Var CLOSE_PAR OPEN_CURLY . Switch_Body CLOSE_CURLY

    CASE     shift, and go to state 215
    DEFAULT  shift, and go to state 216

    Switch_Body  go to state 217


State 202

   84 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression PLUS Constant_Expression .
   85                    | Constant_Expression . MINUS Constant_Expression
   86                    | Constant_Expression . TIMES Constant_Expression
   87                    | Constant_Expression . DIVIDE Constant_Expression
   88                    | Constant_Expression . MODULO Constant_Expression

    TIMES   shift, and go to state 176
    DIVIDE  shift, and go to state 177
    MODULO  shift, and go to state 178

    $default  reduce using rule 84 (Constant_Expression)


State 203

   84 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   85                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression MINUS Constant_Expression .
   86                    | Constant_Expression . TIMES Constant_Expression
   87                    | Constant_Expression . DIVIDE Constant_Expression
   88                    | Constant_Expression . MODULO Constant_Expression

    PLUS    shift, and go to state 174
    TIMES   shift, and go to state 176
    DIVIDE  shift, and go to state 177
    MODULO  shift, and go to state 178

    $default  reduce using rule 85 (Constant_Expression)


State 204

   84 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   85                    | Constant_Expression . MINUS Constant_Expression
   86                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression TIMES Constant_Expression .
   87                    | Constant_Expression . DIVIDE Constant_Expression
   88                    | Constant_Expression . MODULO Constant_Expression

    DIVIDE  shift, and go to state 177
    MODULO  shift, and go to state 178

    $default  reduce using rule 86 (Constant_Expression)


State 205

   84 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   85                    | Constant_Expression . MINUS Constant_Expression
   86                    | Constant_Expression . TIMES Constant_Expression
   87                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression DIVIDE Constant_Expression .
   88                    | Constant_Expression . MODULO Constant_Expression

    $default  reduce using rule 87 (Constant_Expression)


State 206

   84 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   85                    | Constant_Expression . MINUS Constant_Expression
   86                    | Constant_Expression . TIMES Constant_Expression
   87                    | Constant_Expression . DIVIDE Constant_Expression
   88                    | Constant_Expression . MODULO Constant_Expression
   88                    | Constant_Expression MODULO Constant_Expression .

    $default  reduce using rule 88 (Constant_Expression)


State 207

   68 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY . Switch_Body CLOSE_CURLY

    CASE     shift, and go to state 215
    DEFAULT  shift, and go to state 216

    Switch_Body  go to state 218


State 208

   59 Loop_Block: WHILE OPEN_PAR Condition CLOSE_PAR Statement .

    $default  reduce using rule 59 (Loop_Block)


State 209

   58 Loop_Block: FOR OPEN_PAR For_Control CLOSE_PAR Statement .

    $default  reduce using rule 58 (Loop_Block)


State 210

   61 For_Control: Init_Statement SEMI Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 61 (For_Control)


State 211

   60 For_Control: Init_Statement Condition SEMI . Expression

    MINUS      shift, and go to state 50
    INCREMENT  shift, and go to state 51
    DECREMENT  shift, and go to state 52
    OPEN_PAR   shift, and go to state 59
    REAL       shift, and go to state 64
    ID         shift, and go to state 65

    Var         go to state 67
    Var_Asgn    go to state 68
    Func_Call   go to state 69
    Expression  go to state 219


State 212

   38 Param_List: Expression COMMA Param_List .

    $default  reduce using rule 38 (Param_List)


State 213

   23 Dim_List: Expression COMMA Dim_List .

    $default  reduce using rule 23 (Dim_List)


State 214

   67 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR Statement ELSE . Statement

    MINUS       shift, and go to state 50
    INCREMENT   shift, and go to state 51
    DECREMENT   shift, and go to state 52
    IF          shift, and go to state 53
    SWITCH      shift, and go to state 54
    BREAK       shift, and go to state 55
    CONTINUE    shift, and go to state 56
    WHILE       shift, and go to state 57
    FOR         shift, and go to state 58
    OPEN_PAR    shift, and go to state 59
    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 60
    INT         shift, and go to state 61
    FLOAT       shift, and go to state 62
    RETURN      shift, and go to state 63
    CONST       shift, and go to state 5
    EXTERN      shift, and go to state 6
    STATIC      shift, and go to state 7
    REAL        shift, and go to state 64
    ID          shift, and go to state 65

    Var_Decl                   go to state 66
    Var                        go to state 67
    Var_Asgn                   go to state 68
    Func_Call                  go to state 69
    Statement                  go to state 220
    Non_Conditional_Statement  go to state 72
    Block                      go to state 73
    Loop_Block                 go to state 74
    Conditional_Block          go to state 75
    If_Else_Block              go to state 76
    Switch_Block               go to state 77
    Expression                 go to state 78


State 215

   70 Switch_Body: CASE . Constant_Expression COLON Statements

    MINUS     shift, and go to state 134
    OPEN_PAR  shift, and go to state 135
    REAL      shift, and go to state 136

    Constant_Expression  go to state 221


State 216

   71 Switch_Body: DEFAULT . COLON Statements

    COLON  shift, and go to state 222


State 217

   69 Switch_Block: SWITCH OPEN_PAR Var CLOSE_PAR OPEN_CURLY Switch_Body . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 223


State 218

   68 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 224


State 219

   60 For_Control: Init_Statement Condition SEMI Expression .
   99 Expression: Expression . PLUS Expression
  100           | Expression . MINUS Expression
  101           | Expression . TIMES Expression
  102           | Expression . DIVIDE Expression
  103           | Expression . MODULO Expression

    PLUS    shift, and go to state 115
    MINUS   shift, and go to state 116
    TIMES   shift, and go to state 117
    DIVIDE  shift, and go to state 118
    MODULO  shift, and go to state 119

    $default  reduce using rule 60 (For_Control)


State 220

   67 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR Statement ELSE Statement .

    $default  reduce using rule 67 (If_Else_Block)


State 221

   70 Switch_Body: CASE Constant_Expression . COLON Statements
   84 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   85                    | Constant_Expression . MINUS Constant_Expression
   86                    | Constant_Expression . TIMES Constant_Expression
   87                    | Constant_Expression . DIVIDE Constant_Expression
   88                    | Constant_Expression . MODULO Constant_Expression

    PLUS    shift, and go to state 174
    MINUS   shift, and go to state 175
    TIMES   shift, and go to state 176
    DIVIDE  shift, and go to state 177
    MODULO  shift, and go to state 178
    COLON   shift, and go to state 225


State 222

   71 Switch_Body: DEFAULT COLON . Statements

    MINUS       shift, and go to state 50
    INCREMENT   shift, and go to state 51
    DECREMENT   shift, and go to state 52
    IF          shift, and go to state 53
    SWITCH      shift, and go to state 54
    BREAK       shift, and go to state 55
    CONTINUE    shift, and go to state 56
    WHILE       shift, and go to state 57
    FOR         shift, and go to state 58
    OPEN_PAR    shift, and go to state 59
    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 60
    INT         shift, and go to state 61
    FLOAT       shift, and go to state 62
    RETURN      shift, and go to state 63
    CONST       shift, and go to state 5
    EXTERN      shift, and go to state 6
    STATIC      shift, and go to state 7
    REAL        shift, and go to state 64
    ID          shift, and go to state 65

    Var_Decl                   go to state 66
    Var                        go to state 67
    Var_Asgn                   go to state 68
    Func_Call                  go to state 69
    Statements                 go to state 226
    Statement                  go to state 71
    Non_Conditional_Statement  go to state 72
    Block                      go to state 73
    Loop_Block                 go to state 74
    Conditional_Block          go to state 75
    If_Else_Block              go to state 76
    Switch_Block               go to state 77
    Expression                 go to state 78


State 223

   69 Switch_Block: SWITCH OPEN_PAR Var CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY .

    $default  reduce using rule 69 (Switch_Block)


State 224

   68 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY .

    $default  reduce using rule 68 (Switch_Block)


State 225

   70 Switch_Body: CASE Constant_Expression COLON . Statements

    MINUS       shift, and go to state 50
    INCREMENT   shift, and go to state 51
    DECREMENT   shift, and go to state 52
    IF          shift, and go to state 53
    SWITCH      shift, and go to state 54
    BREAK       shift, and go to state 55
    CONTINUE    shift, and go to state 56
    WHILE       shift, and go to state 57
    FOR         shift, and go to state 58
    OPEN_PAR    shift, and go to state 59
    OPEN_CURLY  shift, and go to state 30
    SEMI        shift, and go to state 60
    INT         shift, and go to state 61
    FLOAT       shift, and go to state 62
    RETURN      shift, and go to state 63
    CONST       shift, and go to state 5
    EXTERN      shift, and go to state 6
    STATIC      shift, and go to state 7
    REAL        shift, and go to state 64
    ID          shift, and go to state 65

    Var_Decl                   go to state 66
    Var                        go to state 67
    Var_Asgn                   go to state 68
    Func_Call                  go to state 69
    Statements                 go to state 227
    Statement                  go to state 71
    Non_Conditional_Statement  go to state 72
    Block                      go to state 73
    Loop_Block                 go to state 74
    Conditional_Block          go to state 75
    If_Else_Block              go to state 76
    Switch_Block               go to state 77
    Expression                 go to state 78


State 226

   71 Switch_Body: DEFAULT COLON Statements .

    $default  reduce using rule 71 (Switch_Body)


State 227

   70 Switch_Body: CASE Constant_Expression COLON Statements .

    $default  reduce using rule 70 (Switch_Body)
