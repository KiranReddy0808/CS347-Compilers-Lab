Terminals unused in grammar

   ERROR


Grammar

    0 $accept: Input $end

    1 Input: Global_Statement Input
    2      | END

    3 Global_Statement: Var_Decl
    4                 | Func_Decl SEMI
    5                 | Func_Defn

    6 Var_Decl: INT Var_List SEMI
    7         | FLOAT Var_List SEMI
    8         | CONST INT Var_List SEMI
    9         | CONST FLOAT Var_List SEMI
   10         | STATIC INT Var_List SEMI
   11         | STATIC FLOAT Var_List SEMI
   12         | EXTERN INT Var_List SEMI
   13         | EXTERN FLOAT Var_List SEMI

   14 Var_List: Var COMMA Var_List
   15         | Var_Asgn COMMA Var_List
   16         | Var
   17         | Var_Asgn

   18 Var: ID
   19    | ID OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   20    | ID Brac_Dim_List

   21 Var_Asgn: Var ASGN Expression

   22 Dim_List: Expression COMMA Dim_List
   23         | Expression

   24 Brac_Dim_List: OPEN_BRAC Expression CLOSE_BRAC Brac_Dim_List
   25              | OPEN_BRAC Expression CLOSE_BRAC

   26 Func_Decl: INT ID OPEN_PAR Decl_Param_List CLOSE_PAR
   27          | FLOAT ID OPEN_PAR Decl_Param_List CLOSE_PAR
   28          | VOID ID OPEN_PAR Decl_Param_List CLOSE_PAR
   29          | INT ID OPEN_PAR CLOSE_PAR
   30          | FLOAT ID OPEN_PAR CLOSE_PAR
   31          | VOID ID OPEN_PAR CLOSE_PAR

   32 Decl_Param_List: Decl_Param COMMA Decl_Param_List
   33                | Defn_Param COMMA Decl_Param_List
   34                | Decl_Param
   35                | Defn_Param

   36 Func_Call: ID OPEN_PAR Param_List CLOSE_PAR

   37 Param_List: Expression COMMA Param_List
   38           | Expression

   39 Func_Defn: Func_Decl Block

   40 Decl_Param: INT
   41           | FLOAT

   42 Defn_Param: INT ID
   43           | FLOAT ID

   44 Statements: Statement Statements
   45           | Statement

   46 Statement: Non_Conditional_Statement
   47          | Conditional_Block

   48 Non_Conditional_Statement: Block
   49                          | Loop_Block
   50                          | Var_Decl
   51                          | Expression SEMI
   52                          | BREAK SEMI
   53                          | CONTINUE SEMI
   54                          | RETURN Expression SEMI
   55                          | SEMI

   56 Block: OPEN_CURLY Statements CLOSE_CURLY

   57 Loop_Block: FOR OPEN_PAR For_Control CLOSE_PAR Statement
   58           | WHILE OPEN_PAR Condition CLOSE_PAR Statement

   59 For_Control: Init_Statement Condition SEMI Expression
   60            | Init_Statement SEMI Expression

   61 Init_Statement: Expression SEMI
   62               | SEMI

   63 Conditional_Block: If_Else_Block
   64                  | Switch_Block

   65 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR Statement
   66              | IF OPEN_PAR Condition CLOSE_PAR Statement ELSE Statement

   67 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY
   68             | SWITCH OPEN_PAR Var CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY

   69 Switch_Body: CASE Constant_Expression COLON Statements
   70            | DEFAULT COLON Statements

   71 Condition: OPEN_PAR Condition CLOSE_PAR
   72          | NOT Condition
   73          | Condition OR Condition
   74          | Condition AND Condition
   75          | Expression LT Expression
   76          | Expression GT Expression
   77          | Expression LTE Expression
   78          | Expression GTE Expression
   79          | Expression EQ Expression
   80          | Expression NEQ Expression

   81 Constant_Expression: REAL
   82                    | OPEN_PAR Constant_Expression CLOSE_PAR
   83                    | Constant_Expression PLUS Constant_Expression
   84                    | Constant_Expression MINUS Constant_Expression
   85                    | Constant_Expression TIMES Constant_Expression
   86                    | Constant_Expression DIVIDE Constant_Expression
   87                    | Constant_Expression MODULO Constant_Expression
   88                    | MINUS Constant_Expression

   89 Expression: REAL
   90           | Var
   91           | Var_Asgn
   92           | Func_Call
   93           | Var INCREMENT
   94           | Var DECREMENT
   95           | INCREMENT Var
   96           | DECREMENT Var
   97           | OPEN_PAR Expression CLOSE_PAR
   98           | Expression PLUS Expression
   99           | Expression MINUS Expression
  100           | Expression TIMES Expression
  101           | Expression DIVIDE Expression
  102           | Expression MODULO Expression
  103           | MINUS Expression


Terminals, with rules where they appear

$end (0) 0
error (256)
GTE (258) 78
LTE (259) 77
LT (260) 75
GT (261) 76
NEQ (262) 80
EQ (263) 79
ASGN (264) 21
AND (265) 74
OR (266) 73
NOT (267) 72
PLUS (268) 83 98
MINUS (269) 84 88 99 103
TIMES (270) 85 100
DIVIDE (271) 86 101
MODULO (272) 87 102
INCREMENT (273) 93 95
DECREMENT (274) 94 96
IF (275) 65 66
ELSE (276) 66
SWITCH (277) 67 68
CASE (278) 69
DEFAULT (279) 70
BREAK (280) 52
CONTINUE (281) 53
THEN (282)
WHILE (283) 58
FOR (284) 57
OPEN_PAR (285) 26 27 28 29 30 31 36 57 58 65 66 67 68 71 82 97
OPEN_CURLY (286) 56 67 68
CLOSE_PAR (287) 26 27 28 29 30 31 36 57 58 65 66 67 68 71 82 97
CLOSE_CURLY (288) 56 67 68
COMMA (289) 14 15 19 22 32 33 37
SEMI (290) 4 6 7 8 9 10 11 12 13 51 52 53 54 55 59 60 61 62
OPEN_BRAC (291) 19 24 25
CLOSE_BRAC (292) 19 24 25
COLON (293) 69 70
INT (294) 6 8 10 12 26 29 40 42
FLOAT (295) 7 9 11 13 27 30 41 43
VOID (296) 28 31
RETURN (297) 54
CONST (298) 8 9
EXTERN (299) 12 13
STATIC (300) 10 11
REAL <node> (301) 81 89
ID <node> (302) 18 19 20 26 27 28 29 30 31 36 42 43
ERROR (303)
END (304) 2
NEG (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Input (52)
    on left: 1 2, on right: 0 1
Global_Statement (53)
    on left: 3 4 5, on right: 1
Var_Decl <node> (54)
    on left: 6 7 8 9 10 11 12 13, on right: 3 50
Var_List <node> (55)
    on left: 14 15 16 17, on right: 6 7 8 9 10 11 12 13 14 15
Var <node> (56)
    on left: 18 19 20, on right: 14 16 21 68 90 93 94 95 96
Var_Asgn <node> (57)
    on left: 21, on right: 15 17 91
Dim_List <node> (58)
    on left: 22 23, on right: 19 22
Brac_Dim_List <node> (59)
    on left: 24 25, on right: 20 24
Func_Decl <node> (60)
    on left: 26 27 28 29 30 31, on right: 4 39
Decl_Param_List <node> (61)
    on left: 32 33 34 35, on right: 26 27 28 32 33
Func_Call <node> (62)
    on left: 36, on right: 92
Param_List <node> (63)
    on left: 37 38, on right: 36 37
Func_Defn <node> (64)
    on left: 39, on right: 5
Decl_Param <node> (65)
    on left: 40 41, on right: 32 34
Defn_Param <node> (66)
    on left: 42 43, on right: 33 35
Statements <node> (67)
    on left: 44 45, on right: 44 56 69 70
Statement <node> (68)
    on left: 46 47, on right: 44 45 57 58 65 66
Non_Conditional_Statement <node> (69)
    on left: 48 49 50 51 52 53 54 55, on right: 46
Block <node> (70)
    on left: 56, on right: 39 48
Loop_Block <node> (71)
    on left: 57 58, on right: 49
For_Control <node> (72)
    on left: 59 60, on right: 57
Init_Statement <node> (73)
    on left: 61 62, on right: 59 60
Conditional_Block <node> (74)
    on left: 63 64, on right: 47
If_Else_Block <node> (75)
    on left: 65 66, on right: 63
Switch_Block <node> (76)
    on left: 67 68, on right: 64
Switch_Body <node> (77)
    on left: 69 70, on right: 67 68
Condition <node> (78)
    on left: 71 72 73 74 75 76 77 78 79 80, on right: 58 59 65 66 71
    72 73 74
Constant_Expression <node> (79)
    on left: 81 82 83 84 85 86 87 88, on right: 67 69 82 83 84 85 86
    87 88
Expression <node> (80)
    on left: 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103, on right:
    19 21 22 23 24 25 37 38 51 54 59 60 61 75 76 77 78 79 80 97 98
    99 100 101 102 103


State 0

    0 $accept: . Input $end

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    CONST   shift, and go to state 4
    EXTERN  shift, and go to state 5
    STATIC  shift, and go to state 6
    END     shift, and go to state 7

    Input             go to state 8
    Global_Statement  go to state 9
    Var_Decl          go to state 10
    Func_Decl         go to state 11
    Func_Defn         go to state 12


State 1

    6 Var_Decl: INT . Var_List SEMI
   26 Func_Decl: INT . ID OPEN_PAR Decl_Param_List CLOSE_PAR
   29          | INT . ID OPEN_PAR CLOSE_PAR

    ID  shift, and go to state 13

    Var_List  go to state 14
    Var       go to state 15
    Var_Asgn  go to state 16


State 2

    7 Var_Decl: FLOAT . Var_List SEMI
   27 Func_Decl: FLOAT . ID OPEN_PAR Decl_Param_List CLOSE_PAR
   30          | FLOAT . ID OPEN_PAR CLOSE_PAR

    ID  shift, and go to state 17

    Var_List  go to state 18
    Var       go to state 15
    Var_Asgn  go to state 16


State 3

   28 Func_Decl: VOID . ID OPEN_PAR Decl_Param_List CLOSE_PAR
   31          | VOID . ID OPEN_PAR CLOSE_PAR

    ID  shift, and go to state 19


State 4

    8 Var_Decl: CONST . INT Var_List SEMI
    9         | CONST . FLOAT Var_List SEMI

    INT    shift, and go to state 20
    FLOAT  shift, and go to state 21


State 5

   12 Var_Decl: EXTERN . INT Var_List SEMI
   13         | EXTERN . FLOAT Var_List SEMI

    INT    shift, and go to state 22
    FLOAT  shift, and go to state 23


State 6

   10 Var_Decl: STATIC . INT Var_List SEMI
   11         | STATIC . FLOAT Var_List SEMI

    INT    shift, and go to state 24
    FLOAT  shift, and go to state 25


State 7

    2 Input: END .

    $default  reduce using rule 2 (Input)


State 8

    0 $accept: Input . $end

    $end  shift, and go to state 26


State 9

    1 Input: Global_Statement . Input

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    CONST   shift, and go to state 4
    EXTERN  shift, and go to state 5
    STATIC  shift, and go to state 6
    END     shift, and go to state 7

    Input             go to state 27
    Global_Statement  go to state 9
    Var_Decl          go to state 10
    Func_Decl         go to state 11
    Func_Defn         go to state 12


State 10

    3 Global_Statement: Var_Decl .

    $default  reduce using rule 3 (Global_Statement)


State 11

    4 Global_Statement: Func_Decl . SEMI
   39 Func_Defn: Func_Decl . Block

    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 29

    Block  go to state 30


State 12

    5 Global_Statement: Func_Defn .

    $default  reduce using rule 5 (Global_Statement)


State 13

   18 Var: ID .
   19    | ID . OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   20    | ID . Brac_Dim_List
   26 Func_Decl: INT ID . OPEN_PAR Decl_Param_List CLOSE_PAR
   29          | INT ID . OPEN_PAR CLOSE_PAR

    OPEN_PAR   shift, and go to state 31
    OPEN_BRAC  shift, and go to state 32

    $default  reduce using rule 18 (Var)

    Brac_Dim_List  go to state 33


State 14

    6 Var_Decl: INT Var_List . SEMI

    SEMI  shift, and go to state 34


State 15

   14 Var_List: Var . COMMA Var_List
   16         | Var .
   21 Var_Asgn: Var . ASGN Expression

    ASGN   shift, and go to state 35
    COMMA  shift, and go to state 36

    $default  reduce using rule 16 (Var_List)


State 16

   15 Var_List: Var_Asgn . COMMA Var_List
   17         | Var_Asgn .

    COMMA  shift, and go to state 37

    $default  reduce using rule 17 (Var_List)


State 17

   18 Var: ID .
   19    | ID . OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   20    | ID . Brac_Dim_List
   27 Func_Decl: FLOAT ID . OPEN_PAR Decl_Param_List CLOSE_PAR
   30          | FLOAT ID . OPEN_PAR CLOSE_PAR

    OPEN_PAR   shift, and go to state 38
    OPEN_BRAC  shift, and go to state 32

    $default  reduce using rule 18 (Var)

    Brac_Dim_List  go to state 33


State 18

    7 Var_Decl: FLOAT Var_List . SEMI

    SEMI  shift, and go to state 39


State 19

   28 Func_Decl: VOID ID . OPEN_PAR Decl_Param_List CLOSE_PAR
   31          | VOID ID . OPEN_PAR CLOSE_PAR

    OPEN_PAR  shift, and go to state 40


State 20

    8 Var_Decl: CONST INT . Var_List SEMI

    ID  shift, and go to state 41

    Var_List  go to state 42
    Var       go to state 15
    Var_Asgn  go to state 16


State 21

    9 Var_Decl: CONST FLOAT . Var_List SEMI

    ID  shift, and go to state 41

    Var_List  go to state 43
    Var       go to state 15
    Var_Asgn  go to state 16


State 22

   12 Var_Decl: EXTERN INT . Var_List SEMI

    ID  shift, and go to state 41

    Var_List  go to state 44
    Var       go to state 15
    Var_Asgn  go to state 16


State 23

   13 Var_Decl: EXTERN FLOAT . Var_List SEMI

    ID  shift, and go to state 41

    Var_List  go to state 45
    Var       go to state 15
    Var_Asgn  go to state 16


State 24

   10 Var_Decl: STATIC INT . Var_List SEMI

    ID  shift, and go to state 41

    Var_List  go to state 46
    Var       go to state 15
    Var_Asgn  go to state 16


State 25

   11 Var_Decl: STATIC FLOAT . Var_List SEMI

    ID  shift, and go to state 41

    Var_List  go to state 47
    Var       go to state 15
    Var_Asgn  go to state 16


State 26

    0 $accept: Input $end .

    $default  accept


State 27

    1 Input: Global_Statement Input .

    $default  reduce using rule 1 (Input)


State 28

   56 Block: OPEN_CURLY . Statements CLOSE_CURLY

    MINUS       shift, and go to state 48
    INCREMENT   shift, and go to state 49
    DECREMENT   shift, and go to state 50
    IF          shift, and go to state 51
    SWITCH      shift, and go to state 52
    BREAK       shift, and go to state 53
    CONTINUE    shift, and go to state 54
    WHILE       shift, and go to state 55
    FOR         shift, and go to state 56
    OPEN_PAR    shift, and go to state 57
    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 58
    INT         shift, and go to state 59
    FLOAT       shift, and go to state 60
    RETURN      shift, and go to state 61
    CONST       shift, and go to state 4
    EXTERN      shift, and go to state 5
    STATIC      shift, and go to state 6
    REAL        shift, and go to state 62
    ID          shift, and go to state 63

    Var_Decl                   go to state 64
    Var                        go to state 65
    Var_Asgn                   go to state 66
    Func_Call                  go to state 67
    Statements                 go to state 68
    Statement                  go to state 69
    Non_Conditional_Statement  go to state 70
    Block                      go to state 71
    Loop_Block                 go to state 72
    Conditional_Block          go to state 73
    If_Else_Block              go to state 74
    Switch_Block               go to state 75
    Expression                 go to state 76


State 29

    4 Global_Statement: Func_Decl SEMI .

    $default  reduce using rule 4 (Global_Statement)


State 30

   39 Func_Defn: Func_Decl Block .

    $default  reduce using rule 39 (Func_Defn)


State 31

   26 Func_Decl: INT ID OPEN_PAR . Decl_Param_List CLOSE_PAR
   29          | INT ID OPEN_PAR . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 77
    INT        shift, and go to state 78
    FLOAT      shift, and go to state 79

    Decl_Param_List  go to state 80
    Decl_Param       go to state 81
    Defn_Param       go to state 82


State 32

   19 Var: ID OPEN_BRAC . Expression COMMA Dim_List CLOSE_BRAC
   24 Brac_Dim_List: OPEN_BRAC . Expression CLOSE_BRAC Brac_Dim_List
   25              | OPEN_BRAC . Expression CLOSE_BRAC

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 83


State 33

   20 Var: ID Brac_Dim_List .

    $default  reduce using rule 20 (Var)


State 34

    6 Var_Decl: INT Var_List SEMI .

    $default  reduce using rule 6 (Var_Decl)


State 35

   21 Var_Asgn: Var ASGN . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 84


State 36

   14 Var_List: Var COMMA . Var_List

    ID  shift, and go to state 41

    Var_List  go to state 85
    Var       go to state 15
    Var_Asgn  go to state 16


State 37

   15 Var_List: Var_Asgn COMMA . Var_List

    ID  shift, and go to state 41

    Var_List  go to state 86
    Var       go to state 15
    Var_Asgn  go to state 16


State 38

   27 Func_Decl: FLOAT ID OPEN_PAR . Decl_Param_List CLOSE_PAR
   30          | FLOAT ID OPEN_PAR . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 87
    INT        shift, and go to state 78
    FLOAT      shift, and go to state 79

    Decl_Param_List  go to state 88
    Decl_Param       go to state 81
    Defn_Param       go to state 82


State 39

    7 Var_Decl: FLOAT Var_List SEMI .

    $default  reduce using rule 7 (Var_Decl)


State 40

   28 Func_Decl: VOID ID OPEN_PAR . Decl_Param_List CLOSE_PAR
   31          | VOID ID OPEN_PAR . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 89
    INT        shift, and go to state 78
    FLOAT      shift, and go to state 79

    Decl_Param_List  go to state 90
    Decl_Param       go to state 81
    Defn_Param       go to state 82


State 41

   18 Var: ID .
   19    | ID . OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   20    | ID . Brac_Dim_List

    OPEN_BRAC  shift, and go to state 32

    $default  reduce using rule 18 (Var)

    Brac_Dim_List  go to state 33


State 42

    8 Var_Decl: CONST INT Var_List . SEMI

    SEMI  shift, and go to state 91


State 43

    9 Var_Decl: CONST FLOAT Var_List . SEMI

    SEMI  shift, and go to state 92


State 44

   12 Var_Decl: EXTERN INT Var_List . SEMI

    SEMI  shift, and go to state 93


State 45

   13 Var_Decl: EXTERN FLOAT Var_List . SEMI

    SEMI  shift, and go to state 94


State 46

   10 Var_Decl: STATIC INT Var_List . SEMI

    SEMI  shift, and go to state 95


State 47

   11 Var_Decl: STATIC FLOAT Var_List . SEMI

    SEMI  shift, and go to state 96


State 48

  103 Expression: MINUS . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 97


State 49

   95 Expression: INCREMENT . Var

    ID  shift, and go to state 41

    Var  go to state 98


State 50

   96 Expression: DECREMENT . Var

    ID  shift, and go to state 41

    Var  go to state 99


State 51

   65 If_Else_Block: IF . OPEN_PAR Condition CLOSE_PAR Statement
   66              | IF . OPEN_PAR Condition CLOSE_PAR Statement ELSE Statement

    OPEN_PAR  shift, and go to state 100


State 52

   67 Switch_Block: SWITCH . OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY
   68             | SWITCH . OPEN_PAR Var CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY

    OPEN_PAR  shift, and go to state 101


State 53

   52 Non_Conditional_Statement: BREAK . SEMI

    SEMI  shift, and go to state 102


State 54

   53 Non_Conditional_Statement: CONTINUE . SEMI

    SEMI  shift, and go to state 103


State 55

   58 Loop_Block: WHILE . OPEN_PAR Condition CLOSE_PAR Statement

    OPEN_PAR  shift, and go to state 104


State 56

   57 Loop_Block: FOR . OPEN_PAR For_Control CLOSE_PAR Statement

    OPEN_PAR  shift, and go to state 105


State 57

   97 Expression: OPEN_PAR . Expression CLOSE_PAR

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 106


State 58

   55 Non_Conditional_Statement: SEMI .

    $default  reduce using rule 55 (Non_Conditional_Statement)


State 59

    6 Var_Decl: INT . Var_List SEMI

    ID  shift, and go to state 41

    Var_List  go to state 14
    Var       go to state 15
    Var_Asgn  go to state 16


State 60

    7 Var_Decl: FLOAT . Var_List SEMI

    ID  shift, and go to state 41

    Var_List  go to state 18
    Var       go to state 15
    Var_Asgn  go to state 16


State 61

   54 Non_Conditional_Statement: RETURN . Expression SEMI

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 107


State 62

   89 Expression: REAL .

    $default  reduce using rule 89 (Expression)


State 63

   18 Var: ID .
   19    | ID . OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC
   20    | ID . Brac_Dim_List
   36 Func_Call: ID . OPEN_PAR Param_List CLOSE_PAR

    OPEN_PAR   shift, and go to state 108
    OPEN_BRAC  shift, and go to state 32

    $default  reduce using rule 18 (Var)

    Brac_Dim_List  go to state 33


State 64

   50 Non_Conditional_Statement: Var_Decl .

    $default  reduce using rule 50 (Non_Conditional_Statement)


State 65

   21 Var_Asgn: Var . ASGN Expression
   90 Expression: Var .
   93           | Var . INCREMENT
   94           | Var . DECREMENT

    ASGN       shift, and go to state 35
    INCREMENT  shift, and go to state 109
    DECREMENT  shift, and go to state 110

    $default  reduce using rule 90 (Expression)


State 66

   91 Expression: Var_Asgn .

    $default  reduce using rule 91 (Expression)


State 67

   92 Expression: Func_Call .

    $default  reduce using rule 92 (Expression)


State 68

   56 Block: OPEN_CURLY Statements . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 111


State 69

   44 Statements: Statement . Statements
   45           | Statement .

    MINUS       shift, and go to state 48
    INCREMENT   shift, and go to state 49
    DECREMENT   shift, and go to state 50
    IF          shift, and go to state 51
    SWITCH      shift, and go to state 52
    BREAK       shift, and go to state 53
    CONTINUE    shift, and go to state 54
    WHILE       shift, and go to state 55
    FOR         shift, and go to state 56
    OPEN_PAR    shift, and go to state 57
    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 58
    INT         shift, and go to state 59
    FLOAT       shift, and go to state 60
    RETURN      shift, and go to state 61
    CONST       shift, and go to state 4
    EXTERN      shift, and go to state 5
    STATIC      shift, and go to state 6
    REAL        shift, and go to state 62
    ID          shift, and go to state 63

    $default  reduce using rule 45 (Statements)

    Var_Decl                   go to state 64
    Var                        go to state 65
    Var_Asgn                   go to state 66
    Func_Call                  go to state 67
    Statements                 go to state 112
    Statement                  go to state 69
    Non_Conditional_Statement  go to state 70
    Block                      go to state 71
    Loop_Block                 go to state 72
    Conditional_Block          go to state 73
    If_Else_Block              go to state 74
    Switch_Block               go to state 75
    Expression                 go to state 76


State 70

   46 Statement: Non_Conditional_Statement .

    $default  reduce using rule 46 (Statement)


State 71

   48 Non_Conditional_Statement: Block .

    $default  reduce using rule 48 (Non_Conditional_Statement)


State 72

   49 Non_Conditional_Statement: Loop_Block .

    $default  reduce using rule 49 (Non_Conditional_Statement)


State 73

   47 Statement: Conditional_Block .

    $default  reduce using rule 47 (Statement)


State 74

   63 Conditional_Block: If_Else_Block .

    $default  reduce using rule 63 (Conditional_Block)


State 75

   64 Conditional_Block: Switch_Block .

    $default  reduce using rule 64 (Conditional_Block)


State 76

   51 Non_Conditional_Statement: Expression . SEMI
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117
    SEMI    shift, and go to state 118


State 77

   29 Func_Decl: INT ID OPEN_PAR CLOSE_PAR .

    $default  reduce using rule 29 (Func_Decl)


State 78

   40 Decl_Param: INT .
   42 Defn_Param: INT . ID

    ID  shift, and go to state 119

    $default  reduce using rule 40 (Decl_Param)


State 79

   41 Decl_Param: FLOAT .
   43 Defn_Param: FLOAT . ID

    ID  shift, and go to state 120

    $default  reduce using rule 41 (Decl_Param)


State 80

   26 Func_Decl: INT ID OPEN_PAR Decl_Param_List . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 121


State 81

   32 Decl_Param_List: Decl_Param . COMMA Decl_Param_List
   34                | Decl_Param .

    COMMA  shift, and go to state 122

    $default  reduce using rule 34 (Decl_Param_List)


State 82

   33 Decl_Param_List: Defn_Param . COMMA Decl_Param_List
   35                | Defn_Param .

    COMMA  shift, and go to state 123

    $default  reduce using rule 35 (Decl_Param_List)


State 83

   19 Var: ID OPEN_BRAC Expression . COMMA Dim_List CLOSE_BRAC
   24 Brac_Dim_List: OPEN_BRAC Expression . CLOSE_BRAC Brac_Dim_List
   25              | OPEN_BRAC Expression . CLOSE_BRAC
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS        shift, and go to state 113
    MINUS       shift, and go to state 114
    TIMES       shift, and go to state 115
    DIVIDE      shift, and go to state 116
    MODULO      shift, and go to state 117
    COMMA       shift, and go to state 124
    CLOSE_BRAC  shift, and go to state 125


State 84

   21 Var_Asgn: Var ASGN Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 21 (Var_Asgn)


State 85

   14 Var_List: Var COMMA Var_List .

    $default  reduce using rule 14 (Var_List)


State 86

   15 Var_List: Var_Asgn COMMA Var_List .

    $default  reduce using rule 15 (Var_List)


State 87

   30 Func_Decl: FLOAT ID OPEN_PAR CLOSE_PAR .

    $default  reduce using rule 30 (Func_Decl)


State 88

   27 Func_Decl: FLOAT ID OPEN_PAR Decl_Param_List . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 126


State 89

   31 Func_Decl: VOID ID OPEN_PAR CLOSE_PAR .

    $default  reduce using rule 31 (Func_Decl)


State 90

   28 Func_Decl: VOID ID OPEN_PAR Decl_Param_List . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 127


State 91

    8 Var_Decl: CONST INT Var_List SEMI .

    $default  reduce using rule 8 (Var_Decl)


State 92

    9 Var_Decl: CONST FLOAT Var_List SEMI .

    $default  reduce using rule 9 (Var_Decl)


State 93

   12 Var_Decl: EXTERN INT Var_List SEMI .

    $default  reduce using rule 12 (Var_Decl)


State 94

   13 Var_Decl: EXTERN FLOAT Var_List SEMI .

    $default  reduce using rule 13 (Var_Decl)


State 95

   10 Var_Decl: STATIC INT Var_List SEMI .

    $default  reduce using rule 10 (Var_Decl)


State 96

   11 Var_Decl: STATIC FLOAT Var_List SEMI .

    $default  reduce using rule 11 (Var_Decl)


State 97

   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression
  103           | MINUS Expression .

    $default  reduce using rule 103 (Expression)


State 98

   95 Expression: INCREMENT Var .

    $default  reduce using rule 95 (Expression)


State 99

   96 Expression: DECREMENT Var .

    $default  reduce using rule 96 (Expression)


State 100

   65 If_Else_Block: IF OPEN_PAR . Condition CLOSE_PAR Statement
   66              | IF OPEN_PAR . Condition CLOSE_PAR Statement ELSE Statement

    NOT        shift, and go to state 128
    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 129
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Condition   go to state 130
    Expression  go to state 131


State 101

   67 Switch_Block: SWITCH OPEN_PAR . Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY
   68             | SWITCH OPEN_PAR . Var CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134
    ID        shift, and go to state 41

    Var                  go to state 135
    Constant_Expression  go to state 136


State 102

   52 Non_Conditional_Statement: BREAK SEMI .

    $default  reduce using rule 52 (Non_Conditional_Statement)


State 103

   53 Non_Conditional_Statement: CONTINUE SEMI .

    $default  reduce using rule 53 (Non_Conditional_Statement)


State 104

   58 Loop_Block: WHILE OPEN_PAR . Condition CLOSE_PAR Statement

    NOT        shift, and go to state 128
    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 129
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Condition   go to state 137
    Expression  go to state 131


State 105

   57 Loop_Block: FOR OPEN_PAR . For_Control CLOSE_PAR Statement

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    SEMI       shift, and go to state 138
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var             go to state 65
    Var_Asgn        go to state 66
    Func_Call       go to state 67
    For_Control     go to state 139
    Init_Statement  go to state 140
    Expression      go to state 141


State 106

   97 Expression: OPEN_PAR Expression . CLOSE_PAR
   98           | Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS       shift, and go to state 113
    MINUS      shift, and go to state 114
    TIMES      shift, and go to state 115
    DIVIDE     shift, and go to state 116
    MODULO     shift, and go to state 117
    CLOSE_PAR  shift, and go to state 142


State 107

   54 Non_Conditional_Statement: RETURN Expression . SEMI
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117
    SEMI    shift, and go to state 143


State 108

   36 Func_Call: ID OPEN_PAR . Param_List CLOSE_PAR

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Param_List  go to state 144
    Expression  go to state 145


State 109

   93 Expression: Var INCREMENT .

    $default  reduce using rule 93 (Expression)


State 110

   94 Expression: Var DECREMENT .

    $default  reduce using rule 94 (Expression)


State 111

   56 Block: OPEN_CURLY Statements CLOSE_CURLY .

    $default  reduce using rule 56 (Block)


State 112

   44 Statements: Statement Statements .

    $default  reduce using rule 44 (Statements)


State 113

   98 Expression: Expression PLUS . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 146


State 114

   99 Expression: Expression MINUS . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 147


State 115

  100 Expression: Expression TIMES . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 148


State 116

  101 Expression: Expression DIVIDE . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 149


State 117

  102 Expression: Expression MODULO . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 150


State 118

   51 Non_Conditional_Statement: Expression SEMI .

    $default  reduce using rule 51 (Non_Conditional_Statement)


State 119

   42 Defn_Param: INT ID .

    $default  reduce using rule 42 (Defn_Param)


State 120

   43 Defn_Param: FLOAT ID .

    $default  reduce using rule 43 (Defn_Param)


State 121

   26 Func_Decl: INT ID OPEN_PAR Decl_Param_List CLOSE_PAR .

    $default  reduce using rule 26 (Func_Decl)


State 122

   32 Decl_Param_List: Decl_Param COMMA . Decl_Param_List

    INT    shift, and go to state 78
    FLOAT  shift, and go to state 79

    Decl_Param_List  go to state 151
    Decl_Param       go to state 81
    Defn_Param       go to state 82


State 123

   33 Decl_Param_List: Defn_Param COMMA . Decl_Param_List

    INT    shift, and go to state 78
    FLOAT  shift, and go to state 79

    Decl_Param_List  go to state 152
    Decl_Param       go to state 81
    Defn_Param       go to state 82


State 124

   19 Var: ID OPEN_BRAC Expression COMMA . Dim_List CLOSE_BRAC

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Dim_List    go to state 153
    Func_Call   go to state 67
    Expression  go to state 154


State 125

   24 Brac_Dim_List: OPEN_BRAC Expression CLOSE_BRAC . Brac_Dim_List
   25              | OPEN_BRAC Expression CLOSE_BRAC .

    OPEN_BRAC  shift, and go to state 155

    $default  reduce using rule 25 (Brac_Dim_List)

    Brac_Dim_List  go to state 156


State 126

   27 Func_Decl: FLOAT ID OPEN_PAR Decl_Param_List CLOSE_PAR .

    $default  reduce using rule 27 (Func_Decl)


State 127

   28 Func_Decl: VOID ID OPEN_PAR Decl_Param_List CLOSE_PAR .

    $default  reduce using rule 28 (Func_Decl)


State 128

   72 Condition: NOT . Condition

    NOT        shift, and go to state 128
    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 129
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Condition   go to state 157
    Expression  go to state 131


State 129

   71 Condition: OPEN_PAR . Condition CLOSE_PAR
   97 Expression: OPEN_PAR . Expression CLOSE_PAR

    NOT        shift, and go to state 128
    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 129
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Condition   go to state 158
    Expression  go to state 159


State 130

   65 If_Else_Block: IF OPEN_PAR Condition . CLOSE_PAR Statement
   66              | IF OPEN_PAR Condition . CLOSE_PAR Statement ELSE Statement
   73 Condition: Condition . OR Condition
   74          | Condition . AND Condition

    AND        shift, and go to state 160
    OR         shift, and go to state 161
    CLOSE_PAR  shift, and go to state 162


State 131

   75 Condition: Expression . LT Expression
   76          | Expression . GT Expression
   77          | Expression . LTE Expression
   78          | Expression . GTE Expression
   79          | Expression . EQ Expression
   80          | Expression . NEQ Expression
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    GTE     shift, and go to state 163
    LTE     shift, and go to state 164
    LT      shift, and go to state 165
    GT      shift, and go to state 166
    NEQ     shift, and go to state 167
    EQ      shift, and go to state 168
    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117


State 132

   88 Constant_Expression: MINUS . Constant_Expression

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134

    Constant_Expression  go to state 169


State 133

   82 Constant_Expression: OPEN_PAR . Constant_Expression CLOSE_PAR

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134

    Constant_Expression  go to state 170


State 134

   81 Constant_Expression: REAL .

    $default  reduce using rule 81 (Constant_Expression)


State 135

   68 Switch_Block: SWITCH OPEN_PAR Var . CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY

    CLOSE_PAR  shift, and go to state 171


State 136

   67 Switch_Block: SWITCH OPEN_PAR Constant_Expression . CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY
   83 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression . MODULO Constant_Expression

    PLUS       shift, and go to state 172
    MINUS      shift, and go to state 173
    TIMES      shift, and go to state 174
    DIVIDE     shift, and go to state 175
    MODULO     shift, and go to state 176
    CLOSE_PAR  shift, and go to state 177


State 137

   58 Loop_Block: WHILE OPEN_PAR Condition . CLOSE_PAR Statement
   73 Condition: Condition . OR Condition
   74          | Condition . AND Condition

    AND        shift, and go to state 160
    OR         shift, and go to state 161
    CLOSE_PAR  shift, and go to state 178


State 138

   62 Init_Statement: SEMI .

    $default  reduce using rule 62 (Init_Statement)


State 139

   57 Loop_Block: FOR OPEN_PAR For_Control . CLOSE_PAR Statement

    CLOSE_PAR  shift, and go to state 179


State 140

   59 For_Control: Init_Statement . Condition SEMI Expression
   60            | Init_Statement . SEMI Expression

    NOT        shift, and go to state 128
    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 129
    SEMI       shift, and go to state 180
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Condition   go to state 181
    Expression  go to state 131


State 141

   61 Init_Statement: Expression . SEMI
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117
    SEMI    shift, and go to state 182


State 142

   97 Expression: OPEN_PAR Expression CLOSE_PAR .

    $default  reduce using rule 97 (Expression)


State 143

   54 Non_Conditional_Statement: RETURN Expression SEMI .

    $default  reduce using rule 54 (Non_Conditional_Statement)


State 144

   36 Func_Call: ID OPEN_PAR Param_List . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 183


State 145

   37 Param_List: Expression . COMMA Param_List
   38           | Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117
    COMMA   shift, and go to state 184

    $default  reduce using rule 38 (Param_List)


State 146

   98 Expression: Expression . PLUS Expression
   98           | Expression PLUS Expression .
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 98 (Expression)


State 147

   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
   99           | Expression MINUS Expression .
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 99 (Expression)


State 148

   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  100           | Expression TIMES Expression .
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 100 (Expression)


State 149

   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  101           | Expression DIVIDE Expression .
  102           | Expression . MODULO Expression

    $default  reduce using rule 101 (Expression)


State 150

   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression
  102           | Expression MODULO Expression .

    $default  reduce using rule 102 (Expression)


State 151

   32 Decl_Param_List: Decl_Param COMMA Decl_Param_List .

    $default  reduce using rule 32 (Decl_Param_List)


State 152

   33 Decl_Param_List: Defn_Param COMMA Decl_Param_List .

    $default  reduce using rule 33 (Decl_Param_List)


State 153

   19 Var: ID OPEN_BRAC Expression COMMA Dim_List . CLOSE_BRAC

    CLOSE_BRAC  shift, and go to state 185


State 154

   22 Dim_List: Expression . COMMA Dim_List
   23         | Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117
    COMMA   shift, and go to state 186

    $default  reduce using rule 23 (Dim_List)


State 155

   24 Brac_Dim_List: OPEN_BRAC . Expression CLOSE_BRAC Brac_Dim_List
   25              | OPEN_BRAC . Expression CLOSE_BRAC

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 187


State 156

   24 Brac_Dim_List: OPEN_BRAC Expression CLOSE_BRAC Brac_Dim_List .

    $default  reduce using rule 24 (Brac_Dim_List)


State 157

   72 Condition: NOT Condition .
   73          | Condition . OR Condition
   74          | Condition . AND Condition

    $default  reduce using rule 72 (Condition)


State 158

   71 Condition: OPEN_PAR Condition . CLOSE_PAR
   73          | Condition . OR Condition
   74          | Condition . AND Condition

    AND        shift, and go to state 160
    OR         shift, and go to state 161
    CLOSE_PAR  shift, and go to state 188


State 159

   75 Condition: Expression . LT Expression
   76          | Expression . GT Expression
   77          | Expression . LTE Expression
   78          | Expression . GTE Expression
   79          | Expression . EQ Expression
   80          | Expression . NEQ Expression
   97 Expression: OPEN_PAR Expression . CLOSE_PAR
   98           | Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    GTE        shift, and go to state 163
    LTE        shift, and go to state 164
    LT         shift, and go to state 165
    GT         shift, and go to state 166
    NEQ        shift, and go to state 167
    EQ         shift, and go to state 168
    PLUS       shift, and go to state 113
    MINUS      shift, and go to state 114
    TIMES      shift, and go to state 115
    DIVIDE     shift, and go to state 116
    MODULO     shift, and go to state 117
    CLOSE_PAR  shift, and go to state 142


State 160

   74 Condition: Condition AND . Condition

    NOT        shift, and go to state 128
    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 129
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Condition   go to state 189
    Expression  go to state 131


State 161

   73 Condition: Condition OR . Condition

    NOT        shift, and go to state 128
    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 129
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Condition   go to state 190
    Expression  go to state 131


State 162

   65 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR . Statement
   66              | IF OPEN_PAR Condition CLOSE_PAR . Statement ELSE Statement

    MINUS       shift, and go to state 48
    INCREMENT   shift, and go to state 49
    DECREMENT   shift, and go to state 50
    IF          shift, and go to state 51
    SWITCH      shift, and go to state 52
    BREAK       shift, and go to state 53
    CONTINUE    shift, and go to state 54
    WHILE       shift, and go to state 55
    FOR         shift, and go to state 56
    OPEN_PAR    shift, and go to state 57
    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 58
    INT         shift, and go to state 59
    FLOAT       shift, and go to state 60
    RETURN      shift, and go to state 61
    CONST       shift, and go to state 4
    EXTERN      shift, and go to state 5
    STATIC      shift, and go to state 6
    REAL        shift, and go to state 62
    ID          shift, and go to state 63

    Var_Decl                   go to state 64
    Var                        go to state 65
    Var_Asgn                   go to state 66
    Func_Call                  go to state 67
    Statement                  go to state 191
    Non_Conditional_Statement  go to state 70
    Block                      go to state 71
    Loop_Block                 go to state 72
    Conditional_Block          go to state 73
    If_Else_Block              go to state 74
    Switch_Block               go to state 75
    Expression                 go to state 76


State 163

   78 Condition: Expression GTE . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 192


State 164

   77 Condition: Expression LTE . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 193


State 165

   75 Condition: Expression LT . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 194


State 166

   76 Condition: Expression GT . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 195


State 167

   80 Condition: Expression NEQ . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 196


State 168

   79 Condition: Expression EQ . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 197


State 169

   83 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression . MODULO Constant_Expression
   88                    | MINUS Constant_Expression .

    $default  reduce using rule 88 (Constant_Expression)


State 170

   82 Constant_Expression: OPEN_PAR Constant_Expression . CLOSE_PAR
   83                    | Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression . MODULO Constant_Expression

    PLUS       shift, and go to state 172
    MINUS      shift, and go to state 173
    TIMES      shift, and go to state 174
    DIVIDE     shift, and go to state 175
    MODULO     shift, and go to state 176
    CLOSE_PAR  shift, and go to state 198


State 171

   68 Switch_Block: SWITCH OPEN_PAR Var CLOSE_PAR . OPEN_CURLY Switch_Body CLOSE_CURLY

    OPEN_CURLY  shift, and go to state 199


State 172

   83 Constant_Expression: Constant_Expression PLUS . Constant_Expression

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134

    Constant_Expression  go to state 200


State 173

   84 Constant_Expression: Constant_Expression MINUS . Constant_Expression

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134

    Constant_Expression  go to state 201


State 174

   85 Constant_Expression: Constant_Expression TIMES . Constant_Expression

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134

    Constant_Expression  go to state 202


State 175

   86 Constant_Expression: Constant_Expression DIVIDE . Constant_Expression

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134

    Constant_Expression  go to state 203


State 176

   87 Constant_Expression: Constant_Expression MODULO . Constant_Expression

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134

    Constant_Expression  go to state 204


State 177

   67 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR . OPEN_CURLY Switch_Body CLOSE_CURLY

    OPEN_CURLY  shift, and go to state 205


State 178

   58 Loop_Block: WHILE OPEN_PAR Condition CLOSE_PAR . Statement

    MINUS       shift, and go to state 48
    INCREMENT   shift, and go to state 49
    DECREMENT   shift, and go to state 50
    IF          shift, and go to state 51
    SWITCH      shift, and go to state 52
    BREAK       shift, and go to state 53
    CONTINUE    shift, and go to state 54
    WHILE       shift, and go to state 55
    FOR         shift, and go to state 56
    OPEN_PAR    shift, and go to state 57
    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 58
    INT         shift, and go to state 59
    FLOAT       shift, and go to state 60
    RETURN      shift, and go to state 61
    CONST       shift, and go to state 4
    EXTERN      shift, and go to state 5
    STATIC      shift, and go to state 6
    REAL        shift, and go to state 62
    ID          shift, and go to state 63

    Var_Decl                   go to state 64
    Var                        go to state 65
    Var_Asgn                   go to state 66
    Func_Call                  go to state 67
    Statement                  go to state 206
    Non_Conditional_Statement  go to state 70
    Block                      go to state 71
    Loop_Block                 go to state 72
    Conditional_Block          go to state 73
    If_Else_Block              go to state 74
    Switch_Block               go to state 75
    Expression                 go to state 76


State 179

   57 Loop_Block: FOR OPEN_PAR For_Control CLOSE_PAR . Statement

    MINUS       shift, and go to state 48
    INCREMENT   shift, and go to state 49
    DECREMENT   shift, and go to state 50
    IF          shift, and go to state 51
    SWITCH      shift, and go to state 52
    BREAK       shift, and go to state 53
    CONTINUE    shift, and go to state 54
    WHILE       shift, and go to state 55
    FOR         shift, and go to state 56
    OPEN_PAR    shift, and go to state 57
    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 58
    INT         shift, and go to state 59
    FLOAT       shift, and go to state 60
    RETURN      shift, and go to state 61
    CONST       shift, and go to state 4
    EXTERN      shift, and go to state 5
    STATIC      shift, and go to state 6
    REAL        shift, and go to state 62
    ID          shift, and go to state 63

    Var_Decl                   go to state 64
    Var                        go to state 65
    Var_Asgn                   go to state 66
    Func_Call                  go to state 67
    Statement                  go to state 207
    Non_Conditional_Statement  go to state 70
    Block                      go to state 71
    Loop_Block                 go to state 72
    Conditional_Block          go to state 73
    If_Else_Block              go to state 74
    Switch_Block               go to state 75
    Expression                 go to state 76


State 180

   60 For_Control: Init_Statement SEMI . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 208


State 181

   59 For_Control: Init_Statement Condition . SEMI Expression
   73 Condition: Condition . OR Condition
   74          | Condition . AND Condition

    AND   shift, and go to state 160
    OR    shift, and go to state 161
    SEMI  shift, and go to state 209


State 182

   61 Init_Statement: Expression SEMI .

    $default  reduce using rule 61 (Init_Statement)


State 183

   36 Func_Call: ID OPEN_PAR Param_List CLOSE_PAR .

    $default  reduce using rule 36 (Func_Call)


State 184

   37 Param_List: Expression COMMA . Param_List

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Param_List  go to state 210
    Expression  go to state 145


State 185

   19 Var: ID OPEN_BRAC Expression COMMA Dim_List CLOSE_BRAC .

    $default  reduce using rule 19 (Var)


State 186

   22 Dim_List: Expression COMMA . Dim_List

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Dim_List    go to state 211
    Func_Call   go to state 67
    Expression  go to state 154


State 187

   24 Brac_Dim_List: OPEN_BRAC Expression . CLOSE_BRAC Brac_Dim_List
   25              | OPEN_BRAC Expression . CLOSE_BRAC
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS        shift, and go to state 113
    MINUS       shift, and go to state 114
    TIMES       shift, and go to state 115
    DIVIDE      shift, and go to state 116
    MODULO      shift, and go to state 117
    CLOSE_BRAC  shift, and go to state 125


State 188

   71 Condition: OPEN_PAR Condition CLOSE_PAR .

    $default  reduce using rule 71 (Condition)


State 189

   73 Condition: Condition . OR Condition
   74          | Condition . AND Condition
   74          | Condition AND Condition .

    AND  shift, and go to state 160
    OR   shift, and go to state 161

    $default  reduce using rule 74 (Condition)


State 190

   73 Condition: Condition . OR Condition
   73          | Condition OR Condition .
   74          | Condition . AND Condition

    AND  shift, and go to state 160
    OR   shift, and go to state 161

    $default  reduce using rule 73 (Condition)


State 191

   65 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR Statement .
   66              | IF OPEN_PAR Condition CLOSE_PAR Statement . ELSE Statement

    ELSE  shift, and go to state 212

    $default  reduce using rule 65 (If_Else_Block)


State 192

   78 Condition: Expression GTE Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 78 (Condition)


State 193

   77 Condition: Expression LTE Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 77 (Condition)


State 194

   75 Condition: Expression LT Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 75 (Condition)


State 195

   76 Condition: Expression GT Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 76 (Condition)


State 196

   80 Condition: Expression NEQ Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 80 (Condition)


State 197

   79 Condition: Expression EQ Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 79 (Condition)


State 198

   82 Constant_Expression: OPEN_PAR Constant_Expression CLOSE_PAR .

    $default  reduce using rule 82 (Constant_Expression)


State 199

   68 Switch_Block: SWITCH OPEN_PAR Var CLOSE_PAR OPEN_CURLY . Switch_Body CLOSE_CURLY

    CASE     shift, and go to state 213
    DEFAULT  shift, and go to state 214

    Switch_Body  go to state 215


State 200

   83 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   83                    | Constant_Expression PLUS Constant_Expression .
   84                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression . MODULO Constant_Expression

    TIMES   shift, and go to state 174
    DIVIDE  shift, and go to state 175
    MODULO  shift, and go to state 176

    $default  reduce using rule 83 (Constant_Expression)


State 201

   83 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression . MINUS Constant_Expression
   84                    | Constant_Expression MINUS Constant_Expression .
   85                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression . MODULO Constant_Expression

    PLUS    shift, and go to state 172
    TIMES   shift, and go to state 174
    DIVIDE  shift, and go to state 175
    MODULO  shift, and go to state 176

    $default  reduce using rule 84 (Constant_Expression)


State 202

   83 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression . TIMES Constant_Expression
   85                    | Constant_Expression TIMES Constant_Expression .
   86                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression . MODULO Constant_Expression

    DIVIDE  shift, and go to state 175
    MODULO  shift, and go to state 176

    $default  reduce using rule 85 (Constant_Expression)


State 203

   83 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression . DIVIDE Constant_Expression
   86                    | Constant_Expression DIVIDE Constant_Expression .
   87                    | Constant_Expression . MODULO Constant_Expression

    $default  reduce using rule 86 (Constant_Expression)


State 204

   83 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression . MODULO Constant_Expression
   87                    | Constant_Expression MODULO Constant_Expression .

    $default  reduce using rule 87 (Constant_Expression)


State 205

   67 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY . Switch_Body CLOSE_CURLY

    CASE     shift, and go to state 213
    DEFAULT  shift, and go to state 214

    Switch_Body  go to state 216


State 206

   58 Loop_Block: WHILE OPEN_PAR Condition CLOSE_PAR Statement .

    $default  reduce using rule 58 (Loop_Block)


State 207

   57 Loop_Block: FOR OPEN_PAR For_Control CLOSE_PAR Statement .

    $default  reduce using rule 57 (Loop_Block)


State 208

   60 For_Control: Init_Statement SEMI Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 60 (For_Control)


State 209

   59 For_Control: Init_Statement Condition SEMI . Expression

    MINUS      shift, and go to state 48
    INCREMENT  shift, and go to state 49
    DECREMENT  shift, and go to state 50
    OPEN_PAR   shift, and go to state 57
    REAL       shift, and go to state 62
    ID         shift, and go to state 63

    Var         go to state 65
    Var_Asgn    go to state 66
    Func_Call   go to state 67
    Expression  go to state 217


State 210

   37 Param_List: Expression COMMA Param_List .

    $default  reduce using rule 37 (Param_List)


State 211

   22 Dim_List: Expression COMMA Dim_List .

    $default  reduce using rule 22 (Dim_List)


State 212

   66 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR Statement ELSE . Statement

    MINUS       shift, and go to state 48
    INCREMENT   shift, and go to state 49
    DECREMENT   shift, and go to state 50
    IF          shift, and go to state 51
    SWITCH      shift, and go to state 52
    BREAK       shift, and go to state 53
    CONTINUE    shift, and go to state 54
    WHILE       shift, and go to state 55
    FOR         shift, and go to state 56
    OPEN_PAR    shift, and go to state 57
    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 58
    INT         shift, and go to state 59
    FLOAT       shift, and go to state 60
    RETURN      shift, and go to state 61
    CONST       shift, and go to state 4
    EXTERN      shift, and go to state 5
    STATIC      shift, and go to state 6
    REAL        shift, and go to state 62
    ID          shift, and go to state 63

    Var_Decl                   go to state 64
    Var                        go to state 65
    Var_Asgn                   go to state 66
    Func_Call                  go to state 67
    Statement                  go to state 218
    Non_Conditional_Statement  go to state 70
    Block                      go to state 71
    Loop_Block                 go to state 72
    Conditional_Block          go to state 73
    If_Else_Block              go to state 74
    Switch_Block               go to state 75
    Expression                 go to state 76


State 213

   69 Switch_Body: CASE . Constant_Expression COLON Statements

    MINUS     shift, and go to state 132
    OPEN_PAR  shift, and go to state 133
    REAL      shift, and go to state 134

    Constant_Expression  go to state 219


State 214

   70 Switch_Body: DEFAULT . COLON Statements

    COLON  shift, and go to state 220


State 215

   68 Switch_Block: SWITCH OPEN_PAR Var CLOSE_PAR OPEN_CURLY Switch_Body . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 221


State 216

   67 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 222


State 217

   59 For_Control: Init_Statement Condition SEMI Expression .
   98 Expression: Expression . PLUS Expression
   99           | Expression . MINUS Expression
  100           | Expression . TIMES Expression
  101           | Expression . DIVIDE Expression
  102           | Expression . MODULO Expression

    PLUS    shift, and go to state 113
    MINUS   shift, and go to state 114
    TIMES   shift, and go to state 115
    DIVIDE  shift, and go to state 116
    MODULO  shift, and go to state 117

    $default  reduce using rule 59 (For_Control)


State 218

   66 If_Else_Block: IF OPEN_PAR Condition CLOSE_PAR Statement ELSE Statement .

    $default  reduce using rule 66 (If_Else_Block)


State 219

   69 Switch_Body: CASE Constant_Expression . COLON Statements
   83 Constant_Expression: Constant_Expression . PLUS Constant_Expression
   84                    | Constant_Expression . MINUS Constant_Expression
   85                    | Constant_Expression . TIMES Constant_Expression
   86                    | Constant_Expression . DIVIDE Constant_Expression
   87                    | Constant_Expression . MODULO Constant_Expression

    PLUS    shift, and go to state 172
    MINUS   shift, and go to state 173
    TIMES   shift, and go to state 174
    DIVIDE  shift, and go to state 175
    MODULO  shift, and go to state 176
    COLON   shift, and go to state 223


State 220

   70 Switch_Body: DEFAULT COLON . Statements

    MINUS       shift, and go to state 48
    INCREMENT   shift, and go to state 49
    DECREMENT   shift, and go to state 50
    IF          shift, and go to state 51
    SWITCH      shift, and go to state 52
    BREAK       shift, and go to state 53
    CONTINUE    shift, and go to state 54
    WHILE       shift, and go to state 55
    FOR         shift, and go to state 56
    OPEN_PAR    shift, and go to state 57
    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 58
    INT         shift, and go to state 59
    FLOAT       shift, and go to state 60
    RETURN      shift, and go to state 61
    CONST       shift, and go to state 4
    EXTERN      shift, and go to state 5
    STATIC      shift, and go to state 6
    REAL        shift, and go to state 62
    ID          shift, and go to state 63

    Var_Decl                   go to state 64
    Var                        go to state 65
    Var_Asgn                   go to state 66
    Func_Call                  go to state 67
    Statements                 go to state 224
    Statement                  go to state 69
    Non_Conditional_Statement  go to state 70
    Block                      go to state 71
    Loop_Block                 go to state 72
    Conditional_Block          go to state 73
    If_Else_Block              go to state 74
    Switch_Block               go to state 75
    Expression                 go to state 76


State 221

   68 Switch_Block: SWITCH OPEN_PAR Var CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY .

    $default  reduce using rule 68 (Switch_Block)


State 222

   67 Switch_Block: SWITCH OPEN_PAR Constant_Expression CLOSE_PAR OPEN_CURLY Switch_Body CLOSE_CURLY .

    $default  reduce using rule 67 (Switch_Block)


State 223

   69 Switch_Body: CASE Constant_Expression COLON . Statements

    MINUS       shift, and go to state 48
    INCREMENT   shift, and go to state 49
    DECREMENT   shift, and go to state 50
    IF          shift, and go to state 51
    SWITCH      shift, and go to state 52
    BREAK       shift, and go to state 53
    CONTINUE    shift, and go to state 54
    WHILE       shift, and go to state 55
    FOR         shift, and go to state 56
    OPEN_PAR    shift, and go to state 57
    OPEN_CURLY  shift, and go to state 28
    SEMI        shift, and go to state 58
    INT         shift, and go to state 59
    FLOAT       shift, and go to state 60
    RETURN      shift, and go to state 61
    CONST       shift, and go to state 4
    EXTERN      shift, and go to state 5
    STATIC      shift, and go to state 6
    REAL        shift, and go to state 62
    ID          shift, and go to state 63

    Var_Decl                   go to state 64
    Var                        go to state 65
    Var_Asgn                   go to state 66
    Func_Call                  go to state 67
    Statements                 go to state 225
    Statement                  go to state 69
    Non_Conditional_Statement  go to state 70
    Block                      go to state 71
    Loop_Block                 go to state 72
    Conditional_Block          go to state 73
    If_Else_Block              go to state 74
    Switch_Block               go to state 75
    Expression                 go to state 76


State 224

   70 Switch_Body: DEFAULT COLON Statements .

    $default  reduce using rule 70 (Switch_Body)


State 225

   69 Switch_Body: CASE Constant_Expression COLON Statements .

    $default  reduce using rule 69 (Switch_Body)
